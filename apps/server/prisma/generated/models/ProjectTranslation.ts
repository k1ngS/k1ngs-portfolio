/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `ProjectTranslation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model ProjectTranslation
 *
 */
export type ProjectTranslationModel =
	runtime.Types.Result.DefaultSelection<Prisma.$ProjectTranslationPayload>;

export type AggregateProjectTranslation = {
	_count: ProjectTranslationCountAggregateOutputType | null;
	_min: ProjectTranslationMinAggregateOutputType | null;
	_max: ProjectTranslationMaxAggregateOutputType | null;
};

export type ProjectTranslationMinAggregateOutputType = {
	id: string | null;
	projectId: string | null;
	language: string | null;
	title: string | null;
	description: string | null;
	content: string | null;
};

export type ProjectTranslationMaxAggregateOutputType = {
	id: string | null;
	projectId: string | null;
	language: string | null;
	title: string | null;
	description: string | null;
	content: string | null;
};

export type ProjectTranslationCountAggregateOutputType = {
	id: number;
	projectId: number;
	language: number;
	title: number;
	description: number;
	content: number;
	_all: number;
};

export type ProjectTranslationMinAggregateInputType = {
	id?: true;
	projectId?: true;
	language?: true;
	title?: true;
	description?: true;
	content?: true;
};

export type ProjectTranslationMaxAggregateInputType = {
	id?: true;
	projectId?: true;
	language?: true;
	title?: true;
	description?: true;
	content?: true;
};

export type ProjectTranslationCountAggregateInputType = {
	id?: true;
	projectId?: true;
	language?: true;
	title?: true;
	description?: true;
	content?: true;
	_all?: true;
};

export type ProjectTranslationAggregateArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which ProjectTranslation to aggregate.
	 */
	where?: Prisma.ProjectTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of ProjectTranslations to fetch.
	 */
	orderBy?:
		| Prisma.ProjectTranslationOrderByWithRelationInput
		| Prisma.ProjectTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the start position
	 */
	cursor?: Prisma.ProjectTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` ProjectTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` ProjectTranslations.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Count returned ProjectTranslations
	 **/
	_count?: true | ProjectTranslationCountAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the minimum value
	 **/
	_min?: ProjectTranslationMinAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the maximum value
	 **/
	_max?: ProjectTranslationMaxAggregateInputType;
};

export type GetProjectTranslationAggregateType<
	T extends ProjectTranslationAggregateArgs,
> = {
	[P in keyof T & keyof AggregateProjectTranslation]: P extends
		| "_count"
		| "count"
		? T[P] extends true
			? number
			: Prisma.GetScalarType<T[P], AggregateProjectTranslation[P]>
		: Prisma.GetScalarType<T[P], AggregateProjectTranslation[P]>;
};

export type ProjectTranslationGroupByArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.ProjectTranslationWhereInput;
	orderBy?:
		| Prisma.ProjectTranslationOrderByWithAggregationInput
		| Prisma.ProjectTranslationOrderByWithAggregationInput[];
	by:
		| Prisma.ProjectTranslationScalarFieldEnum[]
		| Prisma.ProjectTranslationScalarFieldEnum;
	having?: Prisma.ProjectTranslationScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
	_count?: ProjectTranslationCountAggregateInputType | true;
	_min?: ProjectTranslationMinAggregateInputType;
	_max?: ProjectTranslationMaxAggregateInputType;
};

export type ProjectTranslationGroupByOutputType = {
	id: string;
	projectId: string;
	language: string;
	title: string;
	description: string;
	content: string | null;
	_count: ProjectTranslationCountAggregateOutputType | null;
	_min: ProjectTranslationMinAggregateOutputType | null;
	_max: ProjectTranslationMaxAggregateOutputType | null;
};

type GetProjectTranslationGroupByPayload<
	T extends ProjectTranslationGroupByArgs,
> = Prisma.PrismaPromise<
	Array<
		Prisma.PickEnumerable<ProjectTranslationGroupByOutputType, T["by"]> & {
			[P in keyof T &
				keyof ProjectTranslationGroupByOutputType]: P extends "_count"
				? T[P] extends boolean
					? number
					: Prisma.GetScalarType<T[P], ProjectTranslationGroupByOutputType[P]>
				: Prisma.GetScalarType<T[P], ProjectTranslationGroupByOutputType[P]>;
		}
	>
>;

export type ProjectTranslationWhereInput = {
	AND?:
		| Prisma.ProjectTranslationWhereInput
		| Prisma.ProjectTranslationWhereInput[];
	OR?: Prisma.ProjectTranslationWhereInput[];
	NOT?:
		| Prisma.ProjectTranslationWhereInput
		| Prisma.ProjectTranslationWhereInput[];
	id?: Prisma.StringFilter<"ProjectTranslation"> | string;
	projectId?: Prisma.StringFilter<"ProjectTranslation"> | string;
	language?: Prisma.StringFilter<"ProjectTranslation"> | string;
	title?: Prisma.StringFilter<"ProjectTranslation"> | string;
	description?: Prisma.StringFilter<"ProjectTranslation"> | string;
	content?: Prisma.StringNullableFilter<"ProjectTranslation"> | string | null;
	project?: Prisma.XOR<
		Prisma.ProjectScalarRelationFilter,
		Prisma.ProjectWhereInput
	>;
};

export type ProjectTranslationOrderByWithRelationInput = {
	id?: Prisma.SortOrder;
	projectId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
	content?: Prisma.SortOrderInput | Prisma.SortOrder;
	project?: Prisma.ProjectOrderByWithRelationInput;
};

export type ProjectTranslationWhereUniqueInput = Prisma.AtLeast<
	{
		id?: string;
		projectId_language?: Prisma.ProjectTranslationProjectIdLanguageCompoundUniqueInput;
		AND?:
			| Prisma.ProjectTranslationWhereInput
			| Prisma.ProjectTranslationWhereInput[];
		OR?: Prisma.ProjectTranslationWhereInput[];
		NOT?:
			| Prisma.ProjectTranslationWhereInput
			| Prisma.ProjectTranslationWhereInput[];
		projectId?: Prisma.StringFilter<"ProjectTranslation"> | string;
		language?: Prisma.StringFilter<"ProjectTranslation"> | string;
		title?: Prisma.StringFilter<"ProjectTranslation"> | string;
		description?: Prisma.StringFilter<"ProjectTranslation"> | string;
		content?: Prisma.StringNullableFilter<"ProjectTranslation"> | string | null;
		project?: Prisma.XOR<
			Prisma.ProjectScalarRelationFilter,
			Prisma.ProjectWhereInput
		>;
	},
	"id" | "projectId_language"
>;

export type ProjectTranslationOrderByWithAggregationInput = {
	id?: Prisma.SortOrder;
	projectId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
	content?: Prisma.SortOrderInput | Prisma.SortOrder;
	_count?: Prisma.ProjectTranslationCountOrderByAggregateInput;
	_max?: Prisma.ProjectTranslationMaxOrderByAggregateInput;
	_min?: Prisma.ProjectTranslationMinOrderByAggregateInput;
};

export type ProjectTranslationScalarWhereWithAggregatesInput = {
	AND?:
		| Prisma.ProjectTranslationScalarWhereWithAggregatesInput
		| Prisma.ProjectTranslationScalarWhereWithAggregatesInput[];
	OR?: Prisma.ProjectTranslationScalarWhereWithAggregatesInput[];
	NOT?:
		| Prisma.ProjectTranslationScalarWhereWithAggregatesInput
		| Prisma.ProjectTranslationScalarWhereWithAggregatesInput[];
	id?: Prisma.StringWithAggregatesFilter<"ProjectTranslation"> | string;
	projectId?: Prisma.StringWithAggregatesFilter<"ProjectTranslation"> | string;
	language?: Prisma.StringWithAggregatesFilter<"ProjectTranslation"> | string;
	title?: Prisma.StringWithAggregatesFilter<"ProjectTranslation"> | string;
	description?:
		| Prisma.StringWithAggregatesFilter<"ProjectTranslation">
		| string;
	content?:
		| Prisma.StringNullableWithAggregatesFilter<"ProjectTranslation">
		| string
		| null;
};

export type ProjectTranslationCreateInput = {
	id?: string;
	language: string;
	title: string;
	description: string;
	content?: string | null;
	project: Prisma.ProjectCreateNestedOneWithoutTranslationsInput;
};

export type ProjectTranslationUncheckedCreateInput = {
	id?: string;
	projectId: string;
	language: string;
	title: string;
	description: string;
	content?: string | null;
};

export type ProjectTranslationUpdateInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	project?: Prisma.ProjectUpdateOneRequiredWithoutTranslationsNestedInput;
};

export type ProjectTranslationUncheckedUpdateInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	projectId?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type ProjectTranslationCreateManyInput = {
	id?: string;
	projectId: string;
	language: string;
	title: string;
	description: string;
	content?: string | null;
};

export type ProjectTranslationUpdateManyMutationInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type ProjectTranslationUncheckedUpdateManyInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	projectId?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type ProjectTranslationListRelationFilter = {
	every?: Prisma.ProjectTranslationWhereInput;
	some?: Prisma.ProjectTranslationWhereInput;
	none?: Prisma.ProjectTranslationWhereInput;
};

export type ProjectTranslationOrderByRelationAggregateInput = {
	_count?: Prisma.SortOrder;
};

export type ProjectTranslationProjectIdLanguageCompoundUniqueInput = {
	projectId: string;
	language: string;
};

export type ProjectTranslationCountOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	projectId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
};

export type ProjectTranslationMaxOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	projectId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
};

export type ProjectTranslationMinOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	projectId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
};

export type ProjectTranslationCreateNestedManyWithoutProjectInput = {
	create?:
		| Prisma.XOR<
				Prisma.ProjectTranslationCreateWithoutProjectInput,
				Prisma.ProjectTranslationUncheckedCreateWithoutProjectInput
		  >
		| Prisma.ProjectTranslationCreateWithoutProjectInput[]
		| Prisma.ProjectTranslationUncheckedCreateWithoutProjectInput[];
	connectOrCreate?:
		| Prisma.ProjectTranslationCreateOrConnectWithoutProjectInput
		| Prisma.ProjectTranslationCreateOrConnectWithoutProjectInput[];
	createMany?: Prisma.ProjectTranslationCreateManyProjectInputEnvelope;
	connect?:
		| Prisma.ProjectTranslationWhereUniqueInput
		| Prisma.ProjectTranslationWhereUniqueInput[];
};

export type ProjectTranslationUncheckedCreateNestedManyWithoutProjectInput = {
	create?:
		| Prisma.XOR<
				Prisma.ProjectTranslationCreateWithoutProjectInput,
				Prisma.ProjectTranslationUncheckedCreateWithoutProjectInput
		  >
		| Prisma.ProjectTranslationCreateWithoutProjectInput[]
		| Prisma.ProjectTranslationUncheckedCreateWithoutProjectInput[];
	connectOrCreate?:
		| Prisma.ProjectTranslationCreateOrConnectWithoutProjectInput
		| Prisma.ProjectTranslationCreateOrConnectWithoutProjectInput[];
	createMany?: Prisma.ProjectTranslationCreateManyProjectInputEnvelope;
	connect?:
		| Prisma.ProjectTranslationWhereUniqueInput
		| Prisma.ProjectTranslationWhereUniqueInput[];
};

export type ProjectTranslationUpdateManyWithoutProjectNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.ProjectTranslationCreateWithoutProjectInput,
				Prisma.ProjectTranslationUncheckedCreateWithoutProjectInput
		  >
		| Prisma.ProjectTranslationCreateWithoutProjectInput[]
		| Prisma.ProjectTranslationUncheckedCreateWithoutProjectInput[];
	connectOrCreate?:
		| Prisma.ProjectTranslationCreateOrConnectWithoutProjectInput
		| Prisma.ProjectTranslationCreateOrConnectWithoutProjectInput[];
	upsert?:
		| Prisma.ProjectTranslationUpsertWithWhereUniqueWithoutProjectInput
		| Prisma.ProjectTranslationUpsertWithWhereUniqueWithoutProjectInput[];
	createMany?: Prisma.ProjectTranslationCreateManyProjectInputEnvelope;
	set?:
		| Prisma.ProjectTranslationWhereUniqueInput
		| Prisma.ProjectTranslationWhereUniqueInput[];
	disconnect?:
		| Prisma.ProjectTranslationWhereUniqueInput
		| Prisma.ProjectTranslationWhereUniqueInput[];
	delete?:
		| Prisma.ProjectTranslationWhereUniqueInput
		| Prisma.ProjectTranslationWhereUniqueInput[];
	connect?:
		| Prisma.ProjectTranslationWhereUniqueInput
		| Prisma.ProjectTranslationWhereUniqueInput[];
	update?:
		| Prisma.ProjectTranslationUpdateWithWhereUniqueWithoutProjectInput
		| Prisma.ProjectTranslationUpdateWithWhereUniqueWithoutProjectInput[];
	updateMany?:
		| Prisma.ProjectTranslationUpdateManyWithWhereWithoutProjectInput
		| Prisma.ProjectTranslationUpdateManyWithWhereWithoutProjectInput[];
	deleteMany?:
		| Prisma.ProjectTranslationScalarWhereInput
		| Prisma.ProjectTranslationScalarWhereInput[];
};

export type ProjectTranslationUncheckedUpdateManyWithoutProjectNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.ProjectTranslationCreateWithoutProjectInput,
				Prisma.ProjectTranslationUncheckedCreateWithoutProjectInput
		  >
		| Prisma.ProjectTranslationCreateWithoutProjectInput[]
		| Prisma.ProjectTranslationUncheckedCreateWithoutProjectInput[];
	connectOrCreate?:
		| Prisma.ProjectTranslationCreateOrConnectWithoutProjectInput
		| Prisma.ProjectTranslationCreateOrConnectWithoutProjectInput[];
	upsert?:
		| Prisma.ProjectTranslationUpsertWithWhereUniqueWithoutProjectInput
		| Prisma.ProjectTranslationUpsertWithWhereUniqueWithoutProjectInput[];
	createMany?: Prisma.ProjectTranslationCreateManyProjectInputEnvelope;
	set?:
		| Prisma.ProjectTranslationWhereUniqueInput
		| Prisma.ProjectTranslationWhereUniqueInput[];
	disconnect?:
		| Prisma.ProjectTranslationWhereUniqueInput
		| Prisma.ProjectTranslationWhereUniqueInput[];
	delete?:
		| Prisma.ProjectTranslationWhereUniqueInput
		| Prisma.ProjectTranslationWhereUniqueInput[];
	connect?:
		| Prisma.ProjectTranslationWhereUniqueInput
		| Prisma.ProjectTranslationWhereUniqueInput[];
	update?:
		| Prisma.ProjectTranslationUpdateWithWhereUniqueWithoutProjectInput
		| Prisma.ProjectTranslationUpdateWithWhereUniqueWithoutProjectInput[];
	updateMany?:
		| Prisma.ProjectTranslationUpdateManyWithWhereWithoutProjectInput
		| Prisma.ProjectTranslationUpdateManyWithWhereWithoutProjectInput[];
	deleteMany?:
		| Prisma.ProjectTranslationScalarWhereInput
		| Prisma.ProjectTranslationScalarWhereInput[];
};

export type ProjectTranslationCreateWithoutProjectInput = {
	id?: string;
	language: string;
	title: string;
	description: string;
	content?: string | null;
};

export type ProjectTranslationUncheckedCreateWithoutProjectInput = {
	id?: string;
	language: string;
	title: string;
	description: string;
	content?: string | null;
};

export type ProjectTranslationCreateOrConnectWithoutProjectInput = {
	where: Prisma.ProjectTranslationWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.ProjectTranslationCreateWithoutProjectInput,
		Prisma.ProjectTranslationUncheckedCreateWithoutProjectInput
	>;
};

export type ProjectTranslationCreateManyProjectInputEnvelope = {
	data:
		| Prisma.ProjectTranslationCreateManyProjectInput
		| Prisma.ProjectTranslationCreateManyProjectInput[];
	skipDuplicates?: boolean;
};

export type ProjectTranslationUpsertWithWhereUniqueWithoutProjectInput = {
	where: Prisma.ProjectTranslationWhereUniqueInput;
	update: Prisma.XOR<
		Prisma.ProjectTranslationUpdateWithoutProjectInput,
		Prisma.ProjectTranslationUncheckedUpdateWithoutProjectInput
	>;
	create: Prisma.XOR<
		Prisma.ProjectTranslationCreateWithoutProjectInput,
		Prisma.ProjectTranslationUncheckedCreateWithoutProjectInput
	>;
};

export type ProjectTranslationUpdateWithWhereUniqueWithoutProjectInput = {
	where: Prisma.ProjectTranslationWhereUniqueInput;
	data: Prisma.XOR<
		Prisma.ProjectTranslationUpdateWithoutProjectInput,
		Prisma.ProjectTranslationUncheckedUpdateWithoutProjectInput
	>;
};

export type ProjectTranslationUpdateManyWithWhereWithoutProjectInput = {
	where: Prisma.ProjectTranslationScalarWhereInput;
	data: Prisma.XOR<
		Prisma.ProjectTranslationUpdateManyMutationInput,
		Prisma.ProjectTranslationUncheckedUpdateManyWithoutProjectInput
	>;
};

export type ProjectTranslationScalarWhereInput = {
	AND?:
		| Prisma.ProjectTranslationScalarWhereInput
		| Prisma.ProjectTranslationScalarWhereInput[];
	OR?: Prisma.ProjectTranslationScalarWhereInput[];
	NOT?:
		| Prisma.ProjectTranslationScalarWhereInput
		| Prisma.ProjectTranslationScalarWhereInput[];
	id?: Prisma.StringFilter<"ProjectTranslation"> | string;
	projectId?: Prisma.StringFilter<"ProjectTranslation"> | string;
	language?: Prisma.StringFilter<"ProjectTranslation"> | string;
	title?: Prisma.StringFilter<"ProjectTranslation"> | string;
	description?: Prisma.StringFilter<"ProjectTranslation"> | string;
	content?: Prisma.StringNullableFilter<"ProjectTranslation"> | string | null;
};

export type ProjectTranslationCreateManyProjectInput = {
	id?: string;
	language: string;
	title: string;
	description: string;
	content?: string | null;
};

export type ProjectTranslationUpdateWithoutProjectInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type ProjectTranslationUncheckedUpdateWithoutProjectInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type ProjectTranslationUncheckedUpdateManyWithoutProjectInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type ProjectTranslationSelect<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		projectId?: boolean;
		language?: boolean;
		title?: boolean;
		description?: boolean;
		content?: boolean;
		project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["projectTranslation"]
>;

export type ProjectTranslationSelectCreateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		projectId?: boolean;
		language?: boolean;
		title?: boolean;
		description?: boolean;
		content?: boolean;
		project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["projectTranslation"]
>;

export type ProjectTranslationSelectUpdateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		projectId?: boolean;
		language?: boolean;
		title?: boolean;
		description?: boolean;
		content?: boolean;
		project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["projectTranslation"]
>;

export type ProjectTranslationSelectScalar = {
	id?: boolean;
	projectId?: boolean;
	language?: boolean;
	title?: boolean;
	description?: boolean;
	content?: boolean;
};

export type ProjectTranslationOmit<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
	"id" | "projectId" | "language" | "title" | "description" | "content",
	ExtArgs["result"]["projectTranslation"]
>;
export type ProjectTranslationInclude<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
};
export type ProjectTranslationIncludeCreateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
};
export type ProjectTranslationIncludeUpdateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
};

export type $ProjectTranslationPayload<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	name: "ProjectTranslation";
	objects: {
		project: Prisma.$ProjectPayload<ExtArgs>;
	};
	scalars: runtime.Types.Extensions.GetPayloadResult<
		{
			id: string;
			projectId: string;
			language: string;
			title: string;
			description: string;
			content: string | null;
		},
		ExtArgs["result"]["projectTranslation"]
	>;
	composites: {};
};

export type ProjectTranslationGetPayload<
	S extends boolean | null | undefined | ProjectTranslationDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$ProjectTranslationPayload, S>;

export type ProjectTranslationCountArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
	ProjectTranslationFindManyArgs,
	"select" | "include" | "distinct" | "omit"
> & {
	select?: ProjectTranslationCountAggregateInputType | true;
};

export interface ProjectTranslationDelegate<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> {
	[K: symbol]: {
		types: Prisma.TypeMap<ExtArgs>["model"]["ProjectTranslation"];
		meta: { name: "ProjectTranslation" };
	};
	/**
	 * Find zero or one ProjectTranslation that matches the filter.
	 * @param {ProjectTranslationFindUniqueArgs} args - Arguments to find a ProjectTranslation
	 * @example
	 * // Get one ProjectTranslation
	 * const projectTranslation = await prisma.projectTranslation.findUnique({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUnique<T extends ProjectTranslationFindUniqueArgs>(
		args: Prisma.SelectSubset<T, ProjectTranslationFindUniqueArgs<ExtArgs>>,
	): Prisma.Prisma__ProjectTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"findUnique",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find one ProjectTranslation that matches the filter or throw an error with `error.code='P2025'`
	 * if no matches were found.
	 * @param {ProjectTranslationFindUniqueOrThrowArgs} args - Arguments to find a ProjectTranslation
	 * @example
	 * // Get one ProjectTranslation
	 * const projectTranslation = await prisma.projectTranslation.findUniqueOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUniqueOrThrow<T extends ProjectTranslationFindUniqueOrThrowArgs>(
		args: Prisma.SelectSubset<
			T,
			ProjectTranslationFindUniqueOrThrowArgs<ExtArgs>
		>,
	): Prisma.Prisma__ProjectTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"findUniqueOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first ProjectTranslation that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ProjectTranslationFindFirstArgs} args - Arguments to find a ProjectTranslation
	 * @example
	 * // Get one ProjectTranslation
	 * const projectTranslation = await prisma.projectTranslation.findFirst({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirst<T extends ProjectTranslationFindFirstArgs>(
		args?: Prisma.SelectSubset<T, ProjectTranslationFindFirstArgs<ExtArgs>>,
	): Prisma.Prisma__ProjectTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"findFirst",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first ProjectTranslation that matches the filter or
	 * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ProjectTranslationFindFirstOrThrowArgs} args - Arguments to find a ProjectTranslation
	 * @example
	 * // Get one ProjectTranslation
	 * const projectTranslation = await prisma.projectTranslation.findFirstOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirstOrThrow<T extends ProjectTranslationFindFirstOrThrowArgs>(
		args?: Prisma.SelectSubset<
			T,
			ProjectTranslationFindFirstOrThrowArgs<ExtArgs>
		>,
	): Prisma.Prisma__ProjectTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"findFirstOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find zero or more ProjectTranslations that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ProjectTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
	 * @example
	 * // Get all ProjectTranslations
	 * const projectTranslations = await prisma.projectTranslation.findMany()
	 *
	 * // Get first 10 ProjectTranslations
	 * const projectTranslations = await prisma.projectTranslation.findMany({ take: 10 })
	 *
	 * // Only select the `id`
	 * const projectTranslationWithIdOnly = await prisma.projectTranslation.findMany({ select: { id: true } })
	 *
	 */
	findMany<T extends ProjectTranslationFindManyArgs>(
		args?: Prisma.SelectSubset<T, ProjectTranslationFindManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"findMany",
			GlobalOmitOptions
		>
	>;

	/**
	 * Create a ProjectTranslation.
	 * @param {ProjectTranslationCreateArgs} args - Arguments to create a ProjectTranslation.
	 * @example
	 * // Create one ProjectTranslation
	 * const ProjectTranslation = await prisma.projectTranslation.create({
	 *   data: {
	 *     // ... data to create a ProjectTranslation
	 *   }
	 * })
	 *
	 */
	create<T extends ProjectTranslationCreateArgs>(
		args: Prisma.SelectSubset<T, ProjectTranslationCreateArgs<ExtArgs>>,
	): Prisma.Prisma__ProjectTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"create",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Create many ProjectTranslations.
	 * @param {ProjectTranslationCreateManyArgs} args - Arguments to create many ProjectTranslations.
	 * @example
	 * // Create many ProjectTranslations
	 * const projectTranslation = await prisma.projectTranslation.createMany({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 */
	createMany<T extends ProjectTranslationCreateManyArgs>(
		args?: Prisma.SelectSubset<T, ProjectTranslationCreateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Create many ProjectTranslations and returns the data saved in the database.
	 * @param {ProjectTranslationCreateManyAndReturnArgs} args - Arguments to create many ProjectTranslations.
	 * @example
	 * // Create many ProjectTranslations
	 * const projectTranslation = await prisma.projectTranslation.createManyAndReturn({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 * // Create many ProjectTranslations and only return the `id`
	 * const projectTranslationWithIdOnly = await prisma.projectTranslation.createManyAndReturn({
	 *   select: { id: true },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 *
	 */
	createManyAndReturn<T extends ProjectTranslationCreateManyAndReturnArgs>(
		args?: Prisma.SelectSubset<
			T,
			ProjectTranslationCreateManyAndReturnArgs<ExtArgs>
		>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"createManyAndReturn",
			GlobalOmitOptions
		>
	>;

	/**
	 * Delete a ProjectTranslation.
	 * @param {ProjectTranslationDeleteArgs} args - Arguments to delete one ProjectTranslation.
	 * @example
	 * // Delete one ProjectTranslation
	 * const ProjectTranslation = await prisma.projectTranslation.delete({
	 *   where: {
	 *     // ... filter to delete one ProjectTranslation
	 *   }
	 * })
	 *
	 */
	delete<T extends ProjectTranslationDeleteArgs>(
		args: Prisma.SelectSubset<T, ProjectTranslationDeleteArgs<ExtArgs>>,
	): Prisma.Prisma__ProjectTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"delete",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Update one ProjectTranslation.
	 * @param {ProjectTranslationUpdateArgs} args - Arguments to update one ProjectTranslation.
	 * @example
	 * // Update one ProjectTranslation
	 * const projectTranslation = await prisma.projectTranslation.update({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	update<T extends ProjectTranslationUpdateArgs>(
		args: Prisma.SelectSubset<T, ProjectTranslationUpdateArgs<ExtArgs>>,
	): Prisma.Prisma__ProjectTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"update",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Delete zero or more ProjectTranslations.
	 * @param {ProjectTranslationDeleteManyArgs} args - Arguments to filter ProjectTranslations to delete.
	 * @example
	 * // Delete a few ProjectTranslations
	 * const { count } = await prisma.projectTranslation.deleteMany({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 *
	 */
	deleteMany<T extends ProjectTranslationDeleteManyArgs>(
		args?: Prisma.SelectSubset<T, ProjectTranslationDeleteManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Update zero or more ProjectTranslations.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ProjectTranslationUpdateManyArgs} args - Arguments to update one or more rows.
	 * @example
	 * // Update many ProjectTranslations
	 * const projectTranslation = await prisma.projectTranslation.updateMany({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	updateMany<T extends ProjectTranslationUpdateManyArgs>(
		args: Prisma.SelectSubset<T, ProjectTranslationUpdateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Update zero or more ProjectTranslations and returns the data updated in the database.
	 * @param {ProjectTranslationUpdateManyAndReturnArgs} args - Arguments to update many ProjectTranslations.
	 * @example
	 * // Update many ProjectTranslations
	 * const projectTranslation = await prisma.projectTranslation.updateManyAndReturn({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 * // Update zero or more ProjectTranslations and only return the `id`
	 * const projectTranslationWithIdOnly = await prisma.projectTranslation.updateManyAndReturn({
	 *   select: { id: true },
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 *
	 */
	updateManyAndReturn<T extends ProjectTranslationUpdateManyAndReturnArgs>(
		args: Prisma.SelectSubset<
			T,
			ProjectTranslationUpdateManyAndReturnArgs<ExtArgs>
		>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"updateManyAndReturn",
			GlobalOmitOptions
		>
	>;

	/**
	 * Create or update one ProjectTranslation.
	 * @param {ProjectTranslationUpsertArgs} args - Arguments to update or create a ProjectTranslation.
	 * @example
	 * // Update or create a ProjectTranslation
	 * const projectTranslation = await prisma.projectTranslation.upsert({
	 *   create: {
	 *     // ... data to create a ProjectTranslation
	 *   },
	 *   update: {
	 *     // ... in case it already exists, update
	 *   },
	 *   where: {
	 *     // ... the filter for the ProjectTranslation we want to update
	 *   }
	 * })
	 */
	upsert<T extends ProjectTranslationUpsertArgs>(
		args: Prisma.SelectSubset<T, ProjectTranslationUpsertArgs<ExtArgs>>,
	): Prisma.Prisma__ProjectTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ProjectTranslationPayload<ExtArgs>,
			T,
			"upsert",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Count the number of ProjectTranslations.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ProjectTranslationCountArgs} args - Arguments to filter ProjectTranslations to count.
	 * @example
	 * // Count the number of ProjectTranslations
	 * const count = await prisma.projectTranslation.count({
	 *   where: {
	 *     // ... the filter for the ProjectTranslations we want to count
	 *   }
	 * })
	 **/
	count<T extends ProjectTranslationCountArgs>(
		args?: Prisma.Subset<T, ProjectTranslationCountArgs>,
	): Prisma.PrismaPromise<
		T extends runtime.Types.Utils.Record<"select", any>
			? T["select"] extends true
				? number
				: Prisma.GetScalarType<
						T["select"],
						ProjectTranslationCountAggregateOutputType
					>
			: number
	>;

	/**
	 * Allows you to perform aggregations operations on a ProjectTranslation.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ProjectTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
	 * @example
	 * // Ordered by age ascending
	 * // Where email contains prisma.io
	 * // Limited to the 10 users
	 * const aggregations = await prisma.user.aggregate({
	 *   _avg: {
	 *     age: true,
	 *   },
	 *   where: {
	 *     email: {
	 *       contains: "prisma.io",
	 *     },
	 *   },
	 *   orderBy: {
	 *     age: "asc",
	 *   },
	 *   take: 10,
	 * })
	 **/
	aggregate<T extends ProjectTranslationAggregateArgs>(
		args: Prisma.Subset<T, ProjectTranslationAggregateArgs>,
	): Prisma.PrismaPromise<GetProjectTranslationAggregateType<T>>;

	/**
	 * Group by ProjectTranslation.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ProjectTranslationGroupByArgs} args - Group by arguments.
	 * @example
	 * // Group by city, order by createdAt, get count
	 * const result = await prisma.user.groupBy({
	 *   by: ['city', 'createdAt'],
	 *   orderBy: {
	 *     createdAt: true
	 *   },
	 *   _count: {
	 *     _all: true
	 *   },
	 * })
	 *
	 **/
	groupBy<
		T extends ProjectTranslationGroupByArgs,
		HasSelectOrTake extends Prisma.Or<
			Prisma.Extends<"skip", Prisma.Keys<T>>,
			Prisma.Extends<"take", Prisma.Keys<T>>
		>,
		OrderByArg extends Prisma.True extends HasSelectOrTake
			? { orderBy: ProjectTranslationGroupByArgs["orderBy"] }
			: { orderBy?: ProjectTranslationGroupByArgs["orderBy"] },
		OrderFields extends Prisma.ExcludeUnderscoreKeys<
			Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
		>,
		ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
		ByValid extends Prisma.Has<ByFields, OrderFields>,
		HavingFields extends Prisma.GetHavingFields<T["having"]>,
		HavingValid extends Prisma.Has<ByFields, HavingFields>,
		ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
		InputErrors extends ByEmpty extends Prisma.True
			? `Error: "by" must not be empty.`
			: HavingValid extends Prisma.False
				? {
						[P in HavingFields]: P extends ByFields
							? never
							: P extends string
								? `Error: Field "${P}" used in "having" needs to be provided in "by".`
								: [
										Error,
										"Field ",
										P,
										` in "having" needs to be provided in "by"`,
									];
					}[HavingFields]
				: "take" extends Prisma.Keys<T>
					? "orderBy" extends Prisma.Keys<T>
						? ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields]
						: 'Error: If you provide "take", you also need to provide "orderBy"'
					: "skip" extends Prisma.Keys<T>
						? "orderBy" extends Prisma.Keys<T>
							? ByValid extends Prisma.True
								? {}
								: {
										[P in OrderFields]: P extends ByFields
											? never
											: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
									}[OrderFields]
							: 'Error: If you provide "skip", you also need to provide "orderBy"'
						: ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields],
	>(
		args: Prisma.SubsetIntersection<
			T,
			ProjectTranslationGroupByArgs,
			OrderByArg
		> &
			InputErrors,
	): {} extends InputErrors
		? GetProjectTranslationGroupByPayload<T>
		: Prisma.PrismaPromise<InputErrors>;
	/**
	 * Fields of the ProjectTranslation model
	 */
	readonly fields: ProjectTranslationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ProjectTranslation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProjectTranslationClient<
	T,
	Null = never,
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
	readonly [Symbol.toStringTag]: "PrismaPromise";
	project<T extends Prisma.ProjectDefaultArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.ProjectDefaultArgs<ExtArgs>>,
	): Prisma.Prisma__ProjectClient<
		| runtime.Types.Result.GetResult<
				Prisma.$ProjectPayload<ExtArgs>,
				T,
				"findUniqueOrThrow",
				GlobalOmitOptions
		  >
		| Null,
		Null,
		ExtArgs,
		GlobalOmitOptions
	>;
	/**
	 * Attaches callbacks for the resolution and/or rejection of the Promise.
	 * @param onfulfilled The callback to execute when the Promise is resolved.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of which ever callback is executed.
	 */
	then<TResult1 = T, TResult2 = never>(
		onfulfilled?:
			| ((value: T) => TResult1 | PromiseLike<TResult1>)
			| undefined
			| null,
		onrejected?:
			| ((reason: any) => TResult2 | PromiseLike<TResult2>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
	/**
	 * Attaches a callback for only the rejection of the Promise.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of the callback.
	 */
	catch<TResult = never>(
		onrejected?:
			| ((reason: any) => TResult | PromiseLike<TResult>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<T | TResult>;
	/**
	 * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
	 * resolved value cannot be modified from the callback.
	 * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
	 * @returns A Promise for the completion of the callback.
	 */
	finally(
		onfinally?: (() => void) | undefined | null,
	): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the ProjectTranslation model
 */
export interface ProjectTranslationFieldRefs {
	readonly id: Prisma.FieldRef<"ProjectTranslation", "String">;
	readonly projectId: Prisma.FieldRef<"ProjectTranslation", "String">;
	readonly language: Prisma.FieldRef<"ProjectTranslation", "String">;
	readonly title: Prisma.FieldRef<"ProjectTranslation", "String">;
	readonly description: Prisma.FieldRef<"ProjectTranslation", "String">;
	readonly content: Prisma.FieldRef<"ProjectTranslation", "String">;
}

// Custom InputTypes
/**
 * ProjectTranslation findUnique
 */
export type ProjectTranslationFindUniqueArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which ProjectTranslation to fetch.
	 */
	where: Prisma.ProjectTranslationWhereUniqueInput;
};

/**
 * ProjectTranslation findUniqueOrThrow
 */
export type ProjectTranslationFindUniqueOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which ProjectTranslation to fetch.
	 */
	where: Prisma.ProjectTranslationWhereUniqueInput;
};

/**
 * ProjectTranslation findFirst
 */
export type ProjectTranslationFindFirstArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which ProjectTranslation to fetch.
	 */
	where?: Prisma.ProjectTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of ProjectTranslations to fetch.
	 */
	orderBy?:
		| Prisma.ProjectTranslationOrderByWithRelationInput
		| Prisma.ProjectTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for ProjectTranslations.
	 */
	cursor?: Prisma.ProjectTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` ProjectTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` ProjectTranslations.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of ProjectTranslations.
	 */
	distinct?:
		| Prisma.ProjectTranslationScalarFieldEnum
		| Prisma.ProjectTranslationScalarFieldEnum[];
};

/**
 * ProjectTranslation findFirstOrThrow
 */
export type ProjectTranslationFindFirstOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which ProjectTranslation to fetch.
	 */
	where?: Prisma.ProjectTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of ProjectTranslations to fetch.
	 */
	orderBy?:
		| Prisma.ProjectTranslationOrderByWithRelationInput
		| Prisma.ProjectTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for ProjectTranslations.
	 */
	cursor?: Prisma.ProjectTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` ProjectTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` ProjectTranslations.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of ProjectTranslations.
	 */
	distinct?:
		| Prisma.ProjectTranslationScalarFieldEnum
		| Prisma.ProjectTranslationScalarFieldEnum[];
};

/**
 * ProjectTranslation findMany
 */
export type ProjectTranslationFindManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which ProjectTranslations to fetch.
	 */
	where?: Prisma.ProjectTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of ProjectTranslations to fetch.
	 */
	orderBy?:
		| Prisma.ProjectTranslationOrderByWithRelationInput
		| Prisma.ProjectTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for listing ProjectTranslations.
	 */
	cursor?: Prisma.ProjectTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` ProjectTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` ProjectTranslations.
	 */
	skip?: number;
	distinct?:
		| Prisma.ProjectTranslationScalarFieldEnum
		| Prisma.ProjectTranslationScalarFieldEnum[];
};

/**
 * ProjectTranslation create
 */
export type ProjectTranslationCreateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationInclude<ExtArgs> | null;
	/**
	 * The data needed to create a ProjectTranslation.
	 */
	data: Prisma.XOR<
		Prisma.ProjectTranslationCreateInput,
		Prisma.ProjectTranslationUncheckedCreateInput
	>;
};

/**
 * ProjectTranslation createMany
 */
export type ProjectTranslationCreateManyArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to create many ProjectTranslations.
	 */
	data:
		| Prisma.ProjectTranslationCreateManyInput
		| Prisma.ProjectTranslationCreateManyInput[];
	skipDuplicates?: boolean;
};

/**
 * ProjectTranslation createManyAndReturn
 */
export type ProjectTranslationCreateManyAndReturnArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelectCreateManyAndReturn<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * The data used to create many ProjectTranslations.
	 */
	data:
		| Prisma.ProjectTranslationCreateManyInput
		| Prisma.ProjectTranslationCreateManyInput[];
	skipDuplicates?: boolean;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * ProjectTranslation update
 */
export type ProjectTranslationUpdateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationInclude<ExtArgs> | null;
	/**
	 * The data needed to update a ProjectTranslation.
	 */
	data: Prisma.XOR<
		Prisma.ProjectTranslationUpdateInput,
		Prisma.ProjectTranslationUncheckedUpdateInput
	>;
	/**
	 * Choose, which ProjectTranslation to update.
	 */
	where: Prisma.ProjectTranslationWhereUniqueInput;
};

/**
 * ProjectTranslation updateMany
 */
export type ProjectTranslationUpdateManyArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to update ProjectTranslations.
	 */
	data: Prisma.XOR<
		Prisma.ProjectTranslationUpdateManyMutationInput,
		Prisma.ProjectTranslationUncheckedUpdateManyInput
	>;
	/**
	 * Filter which ProjectTranslations to update
	 */
	where?: Prisma.ProjectTranslationWhereInput;
	/**
	 * Limit how many ProjectTranslations to update.
	 */
	limit?: number;
};

/**
 * ProjectTranslation updateManyAndReturn
 */
export type ProjectTranslationUpdateManyAndReturnArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelectUpdateManyAndReturn<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * The data used to update ProjectTranslations.
	 */
	data: Prisma.XOR<
		Prisma.ProjectTranslationUpdateManyMutationInput,
		Prisma.ProjectTranslationUncheckedUpdateManyInput
	>;
	/**
	 * Filter which ProjectTranslations to update
	 */
	where?: Prisma.ProjectTranslationWhereInput;
	/**
	 * Limit how many ProjectTranslations to update.
	 */
	limit?: number;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * ProjectTranslation upsert
 */
export type ProjectTranslationUpsertArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationInclude<ExtArgs> | null;
	/**
	 * The filter to search for the ProjectTranslation to update in case it exists.
	 */
	where: Prisma.ProjectTranslationWhereUniqueInput;
	/**
	 * In case the ProjectTranslation found by the `where` argument doesn't exist, create a new ProjectTranslation with this data.
	 */
	create: Prisma.XOR<
		Prisma.ProjectTranslationCreateInput,
		Prisma.ProjectTranslationUncheckedCreateInput
	>;
	/**
	 * In case the ProjectTranslation was found with the provided `where` argument, update it with this data.
	 */
	update: Prisma.XOR<
		Prisma.ProjectTranslationUpdateInput,
		Prisma.ProjectTranslationUncheckedUpdateInput
	>;
};

/**
 * ProjectTranslation delete
 */
export type ProjectTranslationDeleteArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationInclude<ExtArgs> | null;
	/**
	 * Filter which ProjectTranslation to delete.
	 */
	where: Prisma.ProjectTranslationWhereUniqueInput;
};

/**
 * ProjectTranslation deleteMany
 */
export type ProjectTranslationDeleteManyArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which ProjectTranslations to delete
	 */
	where?: Prisma.ProjectTranslationWhereInput;
	/**
	 * Limit how many ProjectTranslations to delete.
	 */
	limit?: number;
};

/**
 * ProjectTranslation without action
 */
export type ProjectTranslationDefaultArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ProjectTranslation
	 */
	select?: Prisma.ProjectTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ProjectTranslation
	 */
	omit?: Prisma.ProjectTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ProjectTranslationInclude<ExtArgs> | null;
};
