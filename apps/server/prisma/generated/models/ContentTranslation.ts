/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `ContentTranslation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model ContentTranslation
 *
 */
export type ContentTranslationModel =
	runtime.Types.Result.DefaultSelection<Prisma.$ContentTranslationPayload>;

export type AggregateContentTranslation = {
	_count: ContentTranslationCountAggregateOutputType | null;
	_min: ContentTranslationMinAggregateOutputType | null;
	_max: ContentTranslationMaxAggregateOutputType | null;
};

export type ContentTranslationMinAggregateOutputType = {
	id: string | null;
	contentId: string | null;
	language: string | null;
	value: string | null;
};

export type ContentTranslationMaxAggregateOutputType = {
	id: string | null;
	contentId: string | null;
	language: string | null;
	value: string | null;
};

export type ContentTranslationCountAggregateOutputType = {
	id: number;
	contentId: number;
	language: number;
	value: number;
	_all: number;
};

export type ContentTranslationMinAggregateInputType = {
	id?: true;
	contentId?: true;
	language?: true;
	value?: true;
};

export type ContentTranslationMaxAggregateInputType = {
	id?: true;
	contentId?: true;
	language?: true;
	value?: true;
};

export type ContentTranslationCountAggregateInputType = {
	id?: true;
	contentId?: true;
	language?: true;
	value?: true;
	_all?: true;
};

export type ContentTranslationAggregateArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which ContentTranslation to aggregate.
	 */
	where?: Prisma.ContentTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of ContentTranslations to fetch.
	 */
	orderBy?:
		| Prisma.ContentTranslationOrderByWithRelationInput
		| Prisma.ContentTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the start position
	 */
	cursor?: Prisma.ContentTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` ContentTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` ContentTranslations.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Count returned ContentTranslations
	 **/
	_count?: true | ContentTranslationCountAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the minimum value
	 **/
	_min?: ContentTranslationMinAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the maximum value
	 **/
	_max?: ContentTranslationMaxAggregateInputType;
};

export type GetContentTranslationAggregateType<
	T extends ContentTranslationAggregateArgs,
> = {
	[P in keyof T & keyof AggregateContentTranslation]: P extends
		| "_count"
		| "count"
		? T[P] extends true
			? number
			: Prisma.GetScalarType<T[P], AggregateContentTranslation[P]>
		: Prisma.GetScalarType<T[P], AggregateContentTranslation[P]>;
};

export type ContentTranslationGroupByArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.ContentTranslationWhereInput;
	orderBy?:
		| Prisma.ContentTranslationOrderByWithAggregationInput
		| Prisma.ContentTranslationOrderByWithAggregationInput[];
	by:
		| Prisma.ContentTranslationScalarFieldEnum[]
		| Prisma.ContentTranslationScalarFieldEnum;
	having?: Prisma.ContentTranslationScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
	_count?: ContentTranslationCountAggregateInputType | true;
	_min?: ContentTranslationMinAggregateInputType;
	_max?: ContentTranslationMaxAggregateInputType;
};

export type ContentTranslationGroupByOutputType = {
	id: string;
	contentId: string;
	language: string;
	value: string;
	_count: ContentTranslationCountAggregateOutputType | null;
	_min: ContentTranslationMinAggregateOutputType | null;
	_max: ContentTranslationMaxAggregateOutputType | null;
};

type GetContentTranslationGroupByPayload<
	T extends ContentTranslationGroupByArgs,
> = Prisma.PrismaPromise<
	Array<
		Prisma.PickEnumerable<ContentTranslationGroupByOutputType, T["by"]> & {
			[P in keyof T &
				keyof ContentTranslationGroupByOutputType]: P extends "_count"
				? T[P] extends boolean
					? number
					: Prisma.GetScalarType<T[P], ContentTranslationGroupByOutputType[P]>
				: Prisma.GetScalarType<T[P], ContentTranslationGroupByOutputType[P]>;
		}
	>
>;

export type ContentTranslationWhereInput = {
	AND?:
		| Prisma.ContentTranslationWhereInput
		| Prisma.ContentTranslationWhereInput[];
	OR?: Prisma.ContentTranslationWhereInput[];
	NOT?:
		| Prisma.ContentTranslationWhereInput
		| Prisma.ContentTranslationWhereInput[];
	id?: Prisma.StringFilter<"ContentTranslation"> | string;
	contentId?: Prisma.StringFilter<"ContentTranslation"> | string;
	language?: Prisma.StringFilter<"ContentTranslation"> | string;
	value?: Prisma.StringFilter<"ContentTranslation"> | string;
	content?: Prisma.XOR<
		Prisma.ContentScalarRelationFilter,
		Prisma.ContentWhereInput
	>;
};

export type ContentTranslationOrderByWithRelationInput = {
	id?: Prisma.SortOrder;
	contentId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	value?: Prisma.SortOrder;
	content?: Prisma.ContentOrderByWithRelationInput;
};

export type ContentTranslationWhereUniqueInput = Prisma.AtLeast<
	{
		id?: string;
		contentId_language?: Prisma.ContentTranslationContentIdLanguageCompoundUniqueInput;
		AND?:
			| Prisma.ContentTranslationWhereInput
			| Prisma.ContentTranslationWhereInput[];
		OR?: Prisma.ContentTranslationWhereInput[];
		NOT?:
			| Prisma.ContentTranslationWhereInput
			| Prisma.ContentTranslationWhereInput[];
		contentId?: Prisma.StringFilter<"ContentTranslation"> | string;
		language?: Prisma.StringFilter<"ContentTranslation"> | string;
		value?: Prisma.StringFilter<"ContentTranslation"> | string;
		content?: Prisma.XOR<
			Prisma.ContentScalarRelationFilter,
			Prisma.ContentWhereInput
		>;
	},
	"id" | "contentId_language"
>;

export type ContentTranslationOrderByWithAggregationInput = {
	id?: Prisma.SortOrder;
	contentId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	value?: Prisma.SortOrder;
	_count?: Prisma.ContentTranslationCountOrderByAggregateInput;
	_max?: Prisma.ContentTranslationMaxOrderByAggregateInput;
	_min?: Prisma.ContentTranslationMinOrderByAggregateInput;
};

export type ContentTranslationScalarWhereWithAggregatesInput = {
	AND?:
		| Prisma.ContentTranslationScalarWhereWithAggregatesInput
		| Prisma.ContentTranslationScalarWhereWithAggregatesInput[];
	OR?: Prisma.ContentTranslationScalarWhereWithAggregatesInput[];
	NOT?:
		| Prisma.ContentTranslationScalarWhereWithAggregatesInput
		| Prisma.ContentTranslationScalarWhereWithAggregatesInput[];
	id?: Prisma.StringWithAggregatesFilter<"ContentTranslation"> | string;
	contentId?: Prisma.StringWithAggregatesFilter<"ContentTranslation"> | string;
	language?: Prisma.StringWithAggregatesFilter<"ContentTranslation"> | string;
	value?: Prisma.StringWithAggregatesFilter<"ContentTranslation"> | string;
};

export type ContentTranslationCreateInput = {
	id?: string;
	language: string;
	value: string;
	content: Prisma.ContentCreateNestedOneWithoutTranslationsInput;
};

export type ContentTranslationUncheckedCreateInput = {
	id?: string;
	contentId: string;
	language: string;
	value: string;
};

export type ContentTranslationUpdateInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	value?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.ContentUpdateOneRequiredWithoutTranslationsNestedInput;
};

export type ContentTranslationUncheckedUpdateInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	contentId?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	value?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type ContentTranslationCreateManyInput = {
	id?: string;
	contentId: string;
	language: string;
	value: string;
};

export type ContentTranslationUpdateManyMutationInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	value?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type ContentTranslationUncheckedUpdateManyInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	contentId?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	value?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type ContentTranslationListRelationFilter = {
	every?: Prisma.ContentTranslationWhereInput;
	some?: Prisma.ContentTranslationWhereInput;
	none?: Prisma.ContentTranslationWhereInput;
};

export type ContentTranslationOrderByRelationAggregateInput = {
	_count?: Prisma.SortOrder;
};

export type ContentTranslationContentIdLanguageCompoundUniqueInput = {
	contentId: string;
	language: string;
};

export type ContentTranslationCountOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	contentId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	value?: Prisma.SortOrder;
};

export type ContentTranslationMaxOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	contentId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	value?: Prisma.SortOrder;
};

export type ContentTranslationMinOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	contentId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	value?: Prisma.SortOrder;
};

export type ContentTranslationCreateNestedManyWithoutContentInput = {
	create?:
		| Prisma.XOR<
				Prisma.ContentTranslationCreateWithoutContentInput,
				Prisma.ContentTranslationUncheckedCreateWithoutContentInput
		  >
		| Prisma.ContentTranslationCreateWithoutContentInput[]
		| Prisma.ContentTranslationUncheckedCreateWithoutContentInput[];
	connectOrCreate?:
		| Prisma.ContentTranslationCreateOrConnectWithoutContentInput
		| Prisma.ContentTranslationCreateOrConnectWithoutContentInput[];
	createMany?: Prisma.ContentTranslationCreateManyContentInputEnvelope;
	connect?:
		| Prisma.ContentTranslationWhereUniqueInput
		| Prisma.ContentTranslationWhereUniqueInput[];
};

export type ContentTranslationUncheckedCreateNestedManyWithoutContentInput = {
	create?:
		| Prisma.XOR<
				Prisma.ContentTranslationCreateWithoutContentInput,
				Prisma.ContentTranslationUncheckedCreateWithoutContentInput
		  >
		| Prisma.ContentTranslationCreateWithoutContentInput[]
		| Prisma.ContentTranslationUncheckedCreateWithoutContentInput[];
	connectOrCreate?:
		| Prisma.ContentTranslationCreateOrConnectWithoutContentInput
		| Prisma.ContentTranslationCreateOrConnectWithoutContentInput[];
	createMany?: Prisma.ContentTranslationCreateManyContentInputEnvelope;
	connect?:
		| Prisma.ContentTranslationWhereUniqueInput
		| Prisma.ContentTranslationWhereUniqueInput[];
};

export type ContentTranslationUpdateManyWithoutContentNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.ContentTranslationCreateWithoutContentInput,
				Prisma.ContentTranslationUncheckedCreateWithoutContentInput
		  >
		| Prisma.ContentTranslationCreateWithoutContentInput[]
		| Prisma.ContentTranslationUncheckedCreateWithoutContentInput[];
	connectOrCreate?:
		| Prisma.ContentTranslationCreateOrConnectWithoutContentInput
		| Prisma.ContentTranslationCreateOrConnectWithoutContentInput[];
	upsert?:
		| Prisma.ContentTranslationUpsertWithWhereUniqueWithoutContentInput
		| Prisma.ContentTranslationUpsertWithWhereUniqueWithoutContentInput[];
	createMany?: Prisma.ContentTranslationCreateManyContentInputEnvelope;
	set?:
		| Prisma.ContentTranslationWhereUniqueInput
		| Prisma.ContentTranslationWhereUniqueInput[];
	disconnect?:
		| Prisma.ContentTranslationWhereUniqueInput
		| Prisma.ContentTranslationWhereUniqueInput[];
	delete?:
		| Prisma.ContentTranslationWhereUniqueInput
		| Prisma.ContentTranslationWhereUniqueInput[];
	connect?:
		| Prisma.ContentTranslationWhereUniqueInput
		| Prisma.ContentTranslationWhereUniqueInput[];
	update?:
		| Prisma.ContentTranslationUpdateWithWhereUniqueWithoutContentInput
		| Prisma.ContentTranslationUpdateWithWhereUniqueWithoutContentInput[];
	updateMany?:
		| Prisma.ContentTranslationUpdateManyWithWhereWithoutContentInput
		| Prisma.ContentTranslationUpdateManyWithWhereWithoutContentInput[];
	deleteMany?:
		| Prisma.ContentTranslationScalarWhereInput
		| Prisma.ContentTranslationScalarWhereInput[];
};

export type ContentTranslationUncheckedUpdateManyWithoutContentNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.ContentTranslationCreateWithoutContentInput,
				Prisma.ContentTranslationUncheckedCreateWithoutContentInput
		  >
		| Prisma.ContentTranslationCreateWithoutContentInput[]
		| Prisma.ContentTranslationUncheckedCreateWithoutContentInput[];
	connectOrCreate?:
		| Prisma.ContentTranslationCreateOrConnectWithoutContentInput
		| Prisma.ContentTranslationCreateOrConnectWithoutContentInput[];
	upsert?:
		| Prisma.ContentTranslationUpsertWithWhereUniqueWithoutContentInput
		| Prisma.ContentTranslationUpsertWithWhereUniqueWithoutContentInput[];
	createMany?: Prisma.ContentTranslationCreateManyContentInputEnvelope;
	set?:
		| Prisma.ContentTranslationWhereUniqueInput
		| Prisma.ContentTranslationWhereUniqueInput[];
	disconnect?:
		| Prisma.ContentTranslationWhereUniqueInput
		| Prisma.ContentTranslationWhereUniqueInput[];
	delete?:
		| Prisma.ContentTranslationWhereUniqueInput
		| Prisma.ContentTranslationWhereUniqueInput[];
	connect?:
		| Prisma.ContentTranslationWhereUniqueInput
		| Prisma.ContentTranslationWhereUniqueInput[];
	update?:
		| Prisma.ContentTranslationUpdateWithWhereUniqueWithoutContentInput
		| Prisma.ContentTranslationUpdateWithWhereUniqueWithoutContentInput[];
	updateMany?:
		| Prisma.ContentTranslationUpdateManyWithWhereWithoutContentInput
		| Prisma.ContentTranslationUpdateManyWithWhereWithoutContentInput[];
	deleteMany?:
		| Prisma.ContentTranslationScalarWhereInput
		| Prisma.ContentTranslationScalarWhereInput[];
};

export type ContentTranslationCreateWithoutContentInput = {
	id?: string;
	language: string;
	value: string;
};

export type ContentTranslationUncheckedCreateWithoutContentInput = {
	id?: string;
	language: string;
	value: string;
};

export type ContentTranslationCreateOrConnectWithoutContentInput = {
	where: Prisma.ContentTranslationWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.ContentTranslationCreateWithoutContentInput,
		Prisma.ContentTranslationUncheckedCreateWithoutContentInput
	>;
};

export type ContentTranslationCreateManyContentInputEnvelope = {
	data:
		| Prisma.ContentTranslationCreateManyContentInput
		| Prisma.ContentTranslationCreateManyContentInput[];
	skipDuplicates?: boolean;
};

export type ContentTranslationUpsertWithWhereUniqueWithoutContentInput = {
	where: Prisma.ContentTranslationWhereUniqueInput;
	update: Prisma.XOR<
		Prisma.ContentTranslationUpdateWithoutContentInput,
		Prisma.ContentTranslationUncheckedUpdateWithoutContentInput
	>;
	create: Prisma.XOR<
		Prisma.ContentTranslationCreateWithoutContentInput,
		Prisma.ContentTranslationUncheckedCreateWithoutContentInput
	>;
};

export type ContentTranslationUpdateWithWhereUniqueWithoutContentInput = {
	where: Prisma.ContentTranslationWhereUniqueInput;
	data: Prisma.XOR<
		Prisma.ContentTranslationUpdateWithoutContentInput,
		Prisma.ContentTranslationUncheckedUpdateWithoutContentInput
	>;
};

export type ContentTranslationUpdateManyWithWhereWithoutContentInput = {
	where: Prisma.ContentTranslationScalarWhereInput;
	data: Prisma.XOR<
		Prisma.ContentTranslationUpdateManyMutationInput,
		Prisma.ContentTranslationUncheckedUpdateManyWithoutContentInput
	>;
};

export type ContentTranslationScalarWhereInput = {
	AND?:
		| Prisma.ContentTranslationScalarWhereInput
		| Prisma.ContentTranslationScalarWhereInput[];
	OR?: Prisma.ContentTranslationScalarWhereInput[];
	NOT?:
		| Prisma.ContentTranslationScalarWhereInput
		| Prisma.ContentTranslationScalarWhereInput[];
	id?: Prisma.StringFilter<"ContentTranslation"> | string;
	contentId?: Prisma.StringFilter<"ContentTranslation"> | string;
	language?: Prisma.StringFilter<"ContentTranslation"> | string;
	value?: Prisma.StringFilter<"ContentTranslation"> | string;
};

export type ContentTranslationCreateManyContentInput = {
	id?: string;
	language: string;
	value: string;
};

export type ContentTranslationUpdateWithoutContentInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	value?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type ContentTranslationUncheckedUpdateWithoutContentInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	value?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type ContentTranslationUncheckedUpdateManyWithoutContentInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	value?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type ContentTranslationSelect<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		contentId?: boolean;
		language?: boolean;
		value?: boolean;
		content?: boolean | Prisma.ContentDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["contentTranslation"]
>;

export type ContentTranslationSelectCreateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		contentId?: boolean;
		language?: boolean;
		value?: boolean;
		content?: boolean | Prisma.ContentDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["contentTranslation"]
>;

export type ContentTranslationSelectUpdateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		contentId?: boolean;
		language?: boolean;
		value?: boolean;
		content?: boolean | Prisma.ContentDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["contentTranslation"]
>;

export type ContentTranslationSelectScalar = {
	id?: boolean;
	contentId?: boolean;
	language?: boolean;
	value?: boolean;
};

export type ContentTranslationOmit<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
	"id" | "contentId" | "language" | "value",
	ExtArgs["result"]["contentTranslation"]
>;
export type ContentTranslationInclude<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	content?: boolean | Prisma.ContentDefaultArgs<ExtArgs>;
};
export type ContentTranslationIncludeCreateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	content?: boolean | Prisma.ContentDefaultArgs<ExtArgs>;
};
export type ContentTranslationIncludeUpdateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	content?: boolean | Prisma.ContentDefaultArgs<ExtArgs>;
};

export type $ContentTranslationPayload<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	name: "ContentTranslation";
	objects: {
		content: Prisma.$ContentPayload<ExtArgs>;
	};
	scalars: runtime.Types.Extensions.GetPayloadResult<
		{
			id: string;
			contentId: string;
			language: string;
			value: string;
		},
		ExtArgs["result"]["contentTranslation"]
	>;
	composites: {};
};

export type ContentTranslationGetPayload<
	S extends boolean | null | undefined | ContentTranslationDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$ContentTranslationPayload, S>;

export type ContentTranslationCountArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
	ContentTranslationFindManyArgs,
	"select" | "include" | "distinct" | "omit"
> & {
	select?: ContentTranslationCountAggregateInputType | true;
};

export interface ContentTranslationDelegate<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> {
	[K: symbol]: {
		types: Prisma.TypeMap<ExtArgs>["model"]["ContentTranslation"];
		meta: { name: "ContentTranslation" };
	};
	/**
	 * Find zero or one ContentTranslation that matches the filter.
	 * @param {ContentTranslationFindUniqueArgs} args - Arguments to find a ContentTranslation
	 * @example
	 * // Get one ContentTranslation
	 * const contentTranslation = await prisma.contentTranslation.findUnique({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUnique<T extends ContentTranslationFindUniqueArgs>(
		args: Prisma.SelectSubset<T, ContentTranslationFindUniqueArgs<ExtArgs>>,
	): Prisma.Prisma__ContentTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"findUnique",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find one ContentTranslation that matches the filter or throw an error with `error.code='P2025'`
	 * if no matches were found.
	 * @param {ContentTranslationFindUniqueOrThrowArgs} args - Arguments to find a ContentTranslation
	 * @example
	 * // Get one ContentTranslation
	 * const contentTranslation = await prisma.contentTranslation.findUniqueOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUniqueOrThrow<T extends ContentTranslationFindUniqueOrThrowArgs>(
		args: Prisma.SelectSubset<
			T,
			ContentTranslationFindUniqueOrThrowArgs<ExtArgs>
		>,
	): Prisma.Prisma__ContentTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"findUniqueOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first ContentTranslation that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ContentTranslationFindFirstArgs} args - Arguments to find a ContentTranslation
	 * @example
	 * // Get one ContentTranslation
	 * const contentTranslation = await prisma.contentTranslation.findFirst({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirst<T extends ContentTranslationFindFirstArgs>(
		args?: Prisma.SelectSubset<T, ContentTranslationFindFirstArgs<ExtArgs>>,
	): Prisma.Prisma__ContentTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"findFirst",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first ContentTranslation that matches the filter or
	 * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ContentTranslationFindFirstOrThrowArgs} args - Arguments to find a ContentTranslation
	 * @example
	 * // Get one ContentTranslation
	 * const contentTranslation = await prisma.contentTranslation.findFirstOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirstOrThrow<T extends ContentTranslationFindFirstOrThrowArgs>(
		args?: Prisma.SelectSubset<
			T,
			ContentTranslationFindFirstOrThrowArgs<ExtArgs>
		>,
	): Prisma.Prisma__ContentTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"findFirstOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find zero or more ContentTranslations that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ContentTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
	 * @example
	 * // Get all ContentTranslations
	 * const contentTranslations = await prisma.contentTranslation.findMany()
	 *
	 * // Get first 10 ContentTranslations
	 * const contentTranslations = await prisma.contentTranslation.findMany({ take: 10 })
	 *
	 * // Only select the `id`
	 * const contentTranslationWithIdOnly = await prisma.contentTranslation.findMany({ select: { id: true } })
	 *
	 */
	findMany<T extends ContentTranslationFindManyArgs>(
		args?: Prisma.SelectSubset<T, ContentTranslationFindManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"findMany",
			GlobalOmitOptions
		>
	>;

	/**
	 * Create a ContentTranslation.
	 * @param {ContentTranslationCreateArgs} args - Arguments to create a ContentTranslation.
	 * @example
	 * // Create one ContentTranslation
	 * const ContentTranslation = await prisma.contentTranslation.create({
	 *   data: {
	 *     // ... data to create a ContentTranslation
	 *   }
	 * })
	 *
	 */
	create<T extends ContentTranslationCreateArgs>(
		args: Prisma.SelectSubset<T, ContentTranslationCreateArgs<ExtArgs>>,
	): Prisma.Prisma__ContentTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"create",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Create many ContentTranslations.
	 * @param {ContentTranslationCreateManyArgs} args - Arguments to create many ContentTranslations.
	 * @example
	 * // Create many ContentTranslations
	 * const contentTranslation = await prisma.contentTranslation.createMany({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 */
	createMany<T extends ContentTranslationCreateManyArgs>(
		args?: Prisma.SelectSubset<T, ContentTranslationCreateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Create many ContentTranslations and returns the data saved in the database.
	 * @param {ContentTranslationCreateManyAndReturnArgs} args - Arguments to create many ContentTranslations.
	 * @example
	 * // Create many ContentTranslations
	 * const contentTranslation = await prisma.contentTranslation.createManyAndReturn({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 * // Create many ContentTranslations and only return the `id`
	 * const contentTranslationWithIdOnly = await prisma.contentTranslation.createManyAndReturn({
	 *   select: { id: true },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 *
	 */
	createManyAndReturn<T extends ContentTranslationCreateManyAndReturnArgs>(
		args?: Prisma.SelectSubset<
			T,
			ContentTranslationCreateManyAndReturnArgs<ExtArgs>
		>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"createManyAndReturn",
			GlobalOmitOptions
		>
	>;

	/**
	 * Delete a ContentTranslation.
	 * @param {ContentTranslationDeleteArgs} args - Arguments to delete one ContentTranslation.
	 * @example
	 * // Delete one ContentTranslation
	 * const ContentTranslation = await prisma.contentTranslation.delete({
	 *   where: {
	 *     // ... filter to delete one ContentTranslation
	 *   }
	 * })
	 *
	 */
	delete<T extends ContentTranslationDeleteArgs>(
		args: Prisma.SelectSubset<T, ContentTranslationDeleteArgs<ExtArgs>>,
	): Prisma.Prisma__ContentTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"delete",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Update one ContentTranslation.
	 * @param {ContentTranslationUpdateArgs} args - Arguments to update one ContentTranslation.
	 * @example
	 * // Update one ContentTranslation
	 * const contentTranslation = await prisma.contentTranslation.update({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	update<T extends ContentTranslationUpdateArgs>(
		args: Prisma.SelectSubset<T, ContentTranslationUpdateArgs<ExtArgs>>,
	): Prisma.Prisma__ContentTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"update",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Delete zero or more ContentTranslations.
	 * @param {ContentTranslationDeleteManyArgs} args - Arguments to filter ContentTranslations to delete.
	 * @example
	 * // Delete a few ContentTranslations
	 * const { count } = await prisma.contentTranslation.deleteMany({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 *
	 */
	deleteMany<T extends ContentTranslationDeleteManyArgs>(
		args?: Prisma.SelectSubset<T, ContentTranslationDeleteManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Update zero or more ContentTranslations.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ContentTranslationUpdateManyArgs} args - Arguments to update one or more rows.
	 * @example
	 * // Update many ContentTranslations
	 * const contentTranslation = await prisma.contentTranslation.updateMany({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	updateMany<T extends ContentTranslationUpdateManyArgs>(
		args: Prisma.SelectSubset<T, ContentTranslationUpdateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Update zero or more ContentTranslations and returns the data updated in the database.
	 * @param {ContentTranslationUpdateManyAndReturnArgs} args - Arguments to update many ContentTranslations.
	 * @example
	 * // Update many ContentTranslations
	 * const contentTranslation = await prisma.contentTranslation.updateManyAndReturn({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 * // Update zero or more ContentTranslations and only return the `id`
	 * const contentTranslationWithIdOnly = await prisma.contentTranslation.updateManyAndReturn({
	 *   select: { id: true },
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 *
	 */
	updateManyAndReturn<T extends ContentTranslationUpdateManyAndReturnArgs>(
		args: Prisma.SelectSubset<
			T,
			ContentTranslationUpdateManyAndReturnArgs<ExtArgs>
		>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"updateManyAndReturn",
			GlobalOmitOptions
		>
	>;

	/**
	 * Create or update one ContentTranslation.
	 * @param {ContentTranslationUpsertArgs} args - Arguments to update or create a ContentTranslation.
	 * @example
	 * // Update or create a ContentTranslation
	 * const contentTranslation = await prisma.contentTranslation.upsert({
	 *   create: {
	 *     // ... data to create a ContentTranslation
	 *   },
	 *   update: {
	 *     // ... in case it already exists, update
	 *   },
	 *   where: {
	 *     // ... the filter for the ContentTranslation we want to update
	 *   }
	 * })
	 */
	upsert<T extends ContentTranslationUpsertArgs>(
		args: Prisma.SelectSubset<T, ContentTranslationUpsertArgs<ExtArgs>>,
	): Prisma.Prisma__ContentTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$ContentTranslationPayload<ExtArgs>,
			T,
			"upsert",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Count the number of ContentTranslations.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ContentTranslationCountArgs} args - Arguments to filter ContentTranslations to count.
	 * @example
	 * // Count the number of ContentTranslations
	 * const count = await prisma.contentTranslation.count({
	 *   where: {
	 *     // ... the filter for the ContentTranslations we want to count
	 *   }
	 * })
	 **/
	count<T extends ContentTranslationCountArgs>(
		args?: Prisma.Subset<T, ContentTranslationCountArgs>,
	): Prisma.PrismaPromise<
		T extends runtime.Types.Utils.Record<"select", any>
			? T["select"] extends true
				? number
				: Prisma.GetScalarType<
						T["select"],
						ContentTranslationCountAggregateOutputType
					>
			: number
	>;

	/**
	 * Allows you to perform aggregations operations on a ContentTranslation.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ContentTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
	 * @example
	 * // Ordered by age ascending
	 * // Where email contains prisma.io
	 * // Limited to the 10 users
	 * const aggregations = await prisma.user.aggregate({
	 *   _avg: {
	 *     age: true,
	 *   },
	 *   where: {
	 *     email: {
	 *       contains: "prisma.io",
	 *     },
	 *   },
	 *   orderBy: {
	 *     age: "asc",
	 *   },
	 *   take: 10,
	 * })
	 **/
	aggregate<T extends ContentTranslationAggregateArgs>(
		args: Prisma.Subset<T, ContentTranslationAggregateArgs>,
	): Prisma.PrismaPromise<GetContentTranslationAggregateType<T>>;

	/**
	 * Group by ContentTranslation.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ContentTranslationGroupByArgs} args - Group by arguments.
	 * @example
	 * // Group by city, order by createdAt, get count
	 * const result = await prisma.user.groupBy({
	 *   by: ['city', 'createdAt'],
	 *   orderBy: {
	 *     createdAt: true
	 *   },
	 *   _count: {
	 *     _all: true
	 *   },
	 * })
	 *
	 **/
	groupBy<
		T extends ContentTranslationGroupByArgs,
		HasSelectOrTake extends Prisma.Or<
			Prisma.Extends<"skip", Prisma.Keys<T>>,
			Prisma.Extends<"take", Prisma.Keys<T>>
		>,
		OrderByArg extends Prisma.True extends HasSelectOrTake
			? { orderBy: ContentTranslationGroupByArgs["orderBy"] }
			: { orderBy?: ContentTranslationGroupByArgs["orderBy"] },
		OrderFields extends Prisma.ExcludeUnderscoreKeys<
			Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
		>,
		ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
		ByValid extends Prisma.Has<ByFields, OrderFields>,
		HavingFields extends Prisma.GetHavingFields<T["having"]>,
		HavingValid extends Prisma.Has<ByFields, HavingFields>,
		ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
		InputErrors extends ByEmpty extends Prisma.True
			? `Error: "by" must not be empty.`
			: HavingValid extends Prisma.False
				? {
						[P in HavingFields]: P extends ByFields
							? never
							: P extends string
								? `Error: Field "${P}" used in "having" needs to be provided in "by".`
								: [
										Error,
										"Field ",
										P,
										` in "having" needs to be provided in "by"`,
									];
					}[HavingFields]
				: "take" extends Prisma.Keys<T>
					? "orderBy" extends Prisma.Keys<T>
						? ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields]
						: 'Error: If you provide "take", you also need to provide "orderBy"'
					: "skip" extends Prisma.Keys<T>
						? "orderBy" extends Prisma.Keys<T>
							? ByValid extends Prisma.True
								? {}
								: {
										[P in OrderFields]: P extends ByFields
											? never
											: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
									}[OrderFields]
							: 'Error: If you provide "skip", you also need to provide "orderBy"'
						: ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields],
	>(
		args: Prisma.SubsetIntersection<
			T,
			ContentTranslationGroupByArgs,
			OrderByArg
		> &
			InputErrors,
	): {} extends InputErrors
		? GetContentTranslationGroupByPayload<T>
		: Prisma.PrismaPromise<InputErrors>;
	/**
	 * Fields of the ContentTranslation model
	 */
	readonly fields: ContentTranslationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ContentTranslation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ContentTranslationClient<
	T,
	Null = never,
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
	readonly [Symbol.toStringTag]: "PrismaPromise";
	content<T extends Prisma.ContentDefaultArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.ContentDefaultArgs<ExtArgs>>,
	): Prisma.Prisma__ContentClient<
		| runtime.Types.Result.GetResult<
				Prisma.$ContentPayload<ExtArgs>,
				T,
				"findUniqueOrThrow",
				GlobalOmitOptions
		  >
		| Null,
		Null,
		ExtArgs,
		GlobalOmitOptions
	>;
	/**
	 * Attaches callbacks for the resolution and/or rejection of the Promise.
	 * @param onfulfilled The callback to execute when the Promise is resolved.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of which ever callback is executed.
	 */
	then<TResult1 = T, TResult2 = never>(
		onfulfilled?:
			| ((value: T) => TResult1 | PromiseLike<TResult1>)
			| undefined
			| null,
		onrejected?:
			| ((reason: any) => TResult2 | PromiseLike<TResult2>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
	/**
	 * Attaches a callback for only the rejection of the Promise.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of the callback.
	 */
	catch<TResult = never>(
		onrejected?:
			| ((reason: any) => TResult | PromiseLike<TResult>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<T | TResult>;
	/**
	 * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
	 * resolved value cannot be modified from the callback.
	 * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
	 * @returns A Promise for the completion of the callback.
	 */
	finally(
		onfinally?: (() => void) | undefined | null,
	): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the ContentTranslation model
 */
export interface ContentTranslationFieldRefs {
	readonly id: Prisma.FieldRef<"ContentTranslation", "String">;
	readonly contentId: Prisma.FieldRef<"ContentTranslation", "String">;
	readonly language: Prisma.FieldRef<"ContentTranslation", "String">;
	readonly value: Prisma.FieldRef<"ContentTranslation", "String">;
}

// Custom InputTypes
/**
 * ContentTranslation findUnique
 */
export type ContentTranslationFindUniqueArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which ContentTranslation to fetch.
	 */
	where: Prisma.ContentTranslationWhereUniqueInput;
};

/**
 * ContentTranslation findUniqueOrThrow
 */
export type ContentTranslationFindUniqueOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which ContentTranslation to fetch.
	 */
	where: Prisma.ContentTranslationWhereUniqueInput;
};

/**
 * ContentTranslation findFirst
 */
export type ContentTranslationFindFirstArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which ContentTranslation to fetch.
	 */
	where?: Prisma.ContentTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of ContentTranslations to fetch.
	 */
	orderBy?:
		| Prisma.ContentTranslationOrderByWithRelationInput
		| Prisma.ContentTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for ContentTranslations.
	 */
	cursor?: Prisma.ContentTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` ContentTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` ContentTranslations.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of ContentTranslations.
	 */
	distinct?:
		| Prisma.ContentTranslationScalarFieldEnum
		| Prisma.ContentTranslationScalarFieldEnum[];
};

/**
 * ContentTranslation findFirstOrThrow
 */
export type ContentTranslationFindFirstOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which ContentTranslation to fetch.
	 */
	where?: Prisma.ContentTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of ContentTranslations to fetch.
	 */
	orderBy?:
		| Prisma.ContentTranslationOrderByWithRelationInput
		| Prisma.ContentTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for ContentTranslations.
	 */
	cursor?: Prisma.ContentTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` ContentTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` ContentTranslations.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of ContentTranslations.
	 */
	distinct?:
		| Prisma.ContentTranslationScalarFieldEnum
		| Prisma.ContentTranslationScalarFieldEnum[];
};

/**
 * ContentTranslation findMany
 */
export type ContentTranslationFindManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which ContentTranslations to fetch.
	 */
	where?: Prisma.ContentTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of ContentTranslations to fetch.
	 */
	orderBy?:
		| Prisma.ContentTranslationOrderByWithRelationInput
		| Prisma.ContentTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for listing ContentTranslations.
	 */
	cursor?: Prisma.ContentTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` ContentTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` ContentTranslations.
	 */
	skip?: number;
	distinct?:
		| Prisma.ContentTranslationScalarFieldEnum
		| Prisma.ContentTranslationScalarFieldEnum[];
};

/**
 * ContentTranslation create
 */
export type ContentTranslationCreateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationInclude<ExtArgs> | null;
	/**
	 * The data needed to create a ContentTranslation.
	 */
	data: Prisma.XOR<
		Prisma.ContentTranslationCreateInput,
		Prisma.ContentTranslationUncheckedCreateInput
	>;
};

/**
 * ContentTranslation createMany
 */
export type ContentTranslationCreateManyArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to create many ContentTranslations.
	 */
	data:
		| Prisma.ContentTranslationCreateManyInput
		| Prisma.ContentTranslationCreateManyInput[];
	skipDuplicates?: boolean;
};

/**
 * ContentTranslation createManyAndReturn
 */
export type ContentTranslationCreateManyAndReturnArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelectCreateManyAndReturn<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * The data used to create many ContentTranslations.
	 */
	data:
		| Prisma.ContentTranslationCreateManyInput
		| Prisma.ContentTranslationCreateManyInput[];
	skipDuplicates?: boolean;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * ContentTranslation update
 */
export type ContentTranslationUpdateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationInclude<ExtArgs> | null;
	/**
	 * The data needed to update a ContentTranslation.
	 */
	data: Prisma.XOR<
		Prisma.ContentTranslationUpdateInput,
		Prisma.ContentTranslationUncheckedUpdateInput
	>;
	/**
	 * Choose, which ContentTranslation to update.
	 */
	where: Prisma.ContentTranslationWhereUniqueInput;
};

/**
 * ContentTranslation updateMany
 */
export type ContentTranslationUpdateManyArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to update ContentTranslations.
	 */
	data: Prisma.XOR<
		Prisma.ContentTranslationUpdateManyMutationInput,
		Prisma.ContentTranslationUncheckedUpdateManyInput
	>;
	/**
	 * Filter which ContentTranslations to update
	 */
	where?: Prisma.ContentTranslationWhereInput;
	/**
	 * Limit how many ContentTranslations to update.
	 */
	limit?: number;
};

/**
 * ContentTranslation updateManyAndReturn
 */
export type ContentTranslationUpdateManyAndReturnArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelectUpdateManyAndReturn<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * The data used to update ContentTranslations.
	 */
	data: Prisma.XOR<
		Prisma.ContentTranslationUpdateManyMutationInput,
		Prisma.ContentTranslationUncheckedUpdateManyInput
	>;
	/**
	 * Filter which ContentTranslations to update
	 */
	where?: Prisma.ContentTranslationWhereInput;
	/**
	 * Limit how many ContentTranslations to update.
	 */
	limit?: number;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * ContentTranslation upsert
 */
export type ContentTranslationUpsertArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationInclude<ExtArgs> | null;
	/**
	 * The filter to search for the ContentTranslation to update in case it exists.
	 */
	where: Prisma.ContentTranslationWhereUniqueInput;
	/**
	 * In case the ContentTranslation found by the `where` argument doesn't exist, create a new ContentTranslation with this data.
	 */
	create: Prisma.XOR<
		Prisma.ContentTranslationCreateInput,
		Prisma.ContentTranslationUncheckedCreateInput
	>;
	/**
	 * In case the ContentTranslation was found with the provided `where` argument, update it with this data.
	 */
	update: Prisma.XOR<
		Prisma.ContentTranslationUpdateInput,
		Prisma.ContentTranslationUncheckedUpdateInput
	>;
};

/**
 * ContentTranslation delete
 */
export type ContentTranslationDeleteArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationInclude<ExtArgs> | null;
	/**
	 * Filter which ContentTranslation to delete.
	 */
	where: Prisma.ContentTranslationWhereUniqueInput;
};

/**
 * ContentTranslation deleteMany
 */
export type ContentTranslationDeleteManyArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which ContentTranslations to delete
	 */
	where?: Prisma.ContentTranslationWhereInput;
	/**
	 * Limit how many ContentTranslations to delete.
	 */
	limit?: number;
};

/**
 * ContentTranslation without action
 */
export type ContentTranslationDefaultArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentTranslation
	 */
	select?: Prisma.ContentTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentTranslation
	 */
	omit?: Prisma.ContentTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentTranslationInclude<ExtArgs> | null;
};
