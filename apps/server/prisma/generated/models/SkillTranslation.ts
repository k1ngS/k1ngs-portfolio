/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `SkillTranslation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model SkillTranslation
 *
 */
export type SkillTranslationModel =
	runtime.Types.Result.DefaultSelection<Prisma.$SkillTranslationPayload>;

export type AggregateSkillTranslation = {
	_count: SkillTranslationCountAggregateOutputType | null;
	_min: SkillTranslationMinAggregateOutputType | null;
	_max: SkillTranslationMaxAggregateOutputType | null;
};

export type SkillTranslationMinAggregateOutputType = {
	id: string | null;
	skillId: string | null;
	language: string | null;
	name: string | null;
	description: string | null;
};

export type SkillTranslationMaxAggregateOutputType = {
	id: string | null;
	skillId: string | null;
	language: string | null;
	name: string | null;
	description: string | null;
};

export type SkillTranslationCountAggregateOutputType = {
	id: number;
	skillId: number;
	language: number;
	name: number;
	description: number;
	_all: number;
};

export type SkillTranslationMinAggregateInputType = {
	id?: true;
	skillId?: true;
	language?: true;
	name?: true;
	description?: true;
};

export type SkillTranslationMaxAggregateInputType = {
	id?: true;
	skillId?: true;
	language?: true;
	name?: true;
	description?: true;
};

export type SkillTranslationCountAggregateInputType = {
	id?: true;
	skillId?: true;
	language?: true;
	name?: true;
	description?: true;
	_all?: true;
};

export type SkillTranslationAggregateArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which SkillTranslation to aggregate.
	 */
	where?: Prisma.SkillTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of SkillTranslations to fetch.
	 */
	orderBy?:
		| Prisma.SkillTranslationOrderByWithRelationInput
		| Prisma.SkillTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the start position
	 */
	cursor?: Prisma.SkillTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` SkillTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` SkillTranslations.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Count returned SkillTranslations
	 **/
	_count?: true | SkillTranslationCountAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the minimum value
	 **/
	_min?: SkillTranslationMinAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the maximum value
	 **/
	_max?: SkillTranslationMaxAggregateInputType;
};

export type GetSkillTranslationAggregateType<
	T extends SkillTranslationAggregateArgs,
> = {
	[P in keyof T & keyof AggregateSkillTranslation]: P extends "_count" | "count"
		? T[P] extends true
			? number
			: Prisma.GetScalarType<T[P], AggregateSkillTranslation[P]>
		: Prisma.GetScalarType<T[P], AggregateSkillTranslation[P]>;
};

export type SkillTranslationGroupByArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.SkillTranslationWhereInput;
	orderBy?:
		| Prisma.SkillTranslationOrderByWithAggregationInput
		| Prisma.SkillTranslationOrderByWithAggregationInput[];
	by:
		| Prisma.SkillTranslationScalarFieldEnum[]
		| Prisma.SkillTranslationScalarFieldEnum;
	having?: Prisma.SkillTranslationScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
	_count?: SkillTranslationCountAggregateInputType | true;
	_min?: SkillTranslationMinAggregateInputType;
	_max?: SkillTranslationMaxAggregateInputType;
};

export type SkillTranslationGroupByOutputType = {
	id: string;
	skillId: string;
	language: string;
	name: string;
	description: string | null;
	_count: SkillTranslationCountAggregateOutputType | null;
	_min: SkillTranslationMinAggregateOutputType | null;
	_max: SkillTranslationMaxAggregateOutputType | null;
};

type GetSkillTranslationGroupByPayload<T extends SkillTranslationGroupByArgs> =
	Prisma.PrismaPromise<
		Array<
			Prisma.PickEnumerable<SkillTranslationGroupByOutputType, T["by"]> & {
				[P in keyof T &
					keyof SkillTranslationGroupByOutputType]: P extends "_count"
					? T[P] extends boolean
						? number
						: Prisma.GetScalarType<T[P], SkillTranslationGroupByOutputType[P]>
					: Prisma.GetScalarType<T[P], SkillTranslationGroupByOutputType[P]>;
			}
		>
	>;

export type SkillTranslationWhereInput = {
	AND?: Prisma.SkillTranslationWhereInput | Prisma.SkillTranslationWhereInput[];
	OR?: Prisma.SkillTranslationWhereInput[];
	NOT?: Prisma.SkillTranslationWhereInput | Prisma.SkillTranslationWhereInput[];
	id?: Prisma.StringFilter<"SkillTranslation"> | string;
	skillId?: Prisma.StringFilter<"SkillTranslation"> | string;
	language?: Prisma.StringFilter<"SkillTranslation"> | string;
	name?: Prisma.StringFilter<"SkillTranslation"> | string;
	description?: Prisma.StringNullableFilter<"SkillTranslation"> | string | null;
	skill?: Prisma.XOR<Prisma.SkillScalarRelationFilter, Prisma.SkillWhereInput>;
};

export type SkillTranslationOrderByWithRelationInput = {
	id?: Prisma.SortOrder;
	skillId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	name?: Prisma.SortOrder;
	description?: Prisma.SortOrderInput | Prisma.SortOrder;
	skill?: Prisma.SkillOrderByWithRelationInput;
};

export type SkillTranslationWhereUniqueInput = Prisma.AtLeast<
	{
		id?: string;
		skillId_language?: Prisma.SkillTranslationSkillIdLanguageCompoundUniqueInput;
		AND?:
			| Prisma.SkillTranslationWhereInput
			| Prisma.SkillTranslationWhereInput[];
		OR?: Prisma.SkillTranslationWhereInput[];
		NOT?:
			| Prisma.SkillTranslationWhereInput
			| Prisma.SkillTranslationWhereInput[];
		skillId?: Prisma.StringFilter<"SkillTranslation"> | string;
		language?: Prisma.StringFilter<"SkillTranslation"> | string;
		name?: Prisma.StringFilter<"SkillTranslation"> | string;
		description?:
			| Prisma.StringNullableFilter<"SkillTranslation">
			| string
			| null;
		skill?: Prisma.XOR<
			Prisma.SkillScalarRelationFilter,
			Prisma.SkillWhereInput
		>;
	},
	"id" | "skillId_language"
>;

export type SkillTranslationOrderByWithAggregationInput = {
	id?: Prisma.SortOrder;
	skillId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	name?: Prisma.SortOrder;
	description?: Prisma.SortOrderInput | Prisma.SortOrder;
	_count?: Prisma.SkillTranslationCountOrderByAggregateInput;
	_max?: Prisma.SkillTranslationMaxOrderByAggregateInput;
	_min?: Prisma.SkillTranslationMinOrderByAggregateInput;
};

export type SkillTranslationScalarWhereWithAggregatesInput = {
	AND?:
		| Prisma.SkillTranslationScalarWhereWithAggregatesInput
		| Prisma.SkillTranslationScalarWhereWithAggregatesInput[];
	OR?: Prisma.SkillTranslationScalarWhereWithAggregatesInput[];
	NOT?:
		| Prisma.SkillTranslationScalarWhereWithAggregatesInput
		| Prisma.SkillTranslationScalarWhereWithAggregatesInput[];
	id?: Prisma.StringWithAggregatesFilter<"SkillTranslation"> | string;
	skillId?: Prisma.StringWithAggregatesFilter<"SkillTranslation"> | string;
	language?: Prisma.StringWithAggregatesFilter<"SkillTranslation"> | string;
	name?: Prisma.StringWithAggregatesFilter<"SkillTranslation"> | string;
	description?:
		| Prisma.StringNullableWithAggregatesFilter<"SkillTranslation">
		| string
		| null;
};

export type SkillTranslationCreateInput = {
	id?: string;
	language: string;
	name: string;
	description?: string | null;
	skill: Prisma.SkillCreateNestedOneWithoutTranslationsInput;
};

export type SkillTranslationUncheckedCreateInput = {
	id?: string;
	skillId: string;
	language: string;
	name: string;
	description?: string | null;
};

export type SkillTranslationUpdateInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	name?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	skill?: Prisma.SkillUpdateOneRequiredWithoutTranslationsNestedInput;
};

export type SkillTranslationUncheckedUpdateInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	skillId?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	name?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type SkillTranslationCreateManyInput = {
	id?: string;
	skillId: string;
	language: string;
	name: string;
	description?: string | null;
};

export type SkillTranslationUpdateManyMutationInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	name?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type SkillTranslationUncheckedUpdateManyInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	skillId?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	name?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type SkillTranslationListRelationFilter = {
	every?: Prisma.SkillTranslationWhereInput;
	some?: Prisma.SkillTranslationWhereInput;
	none?: Prisma.SkillTranslationWhereInput;
};

export type SkillTranslationOrderByRelationAggregateInput = {
	_count?: Prisma.SortOrder;
};

export type SkillTranslationSkillIdLanguageCompoundUniqueInput = {
	skillId: string;
	language: string;
};

export type SkillTranslationCountOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	skillId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	name?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
};

export type SkillTranslationMaxOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	skillId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	name?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
};

export type SkillTranslationMinOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	skillId?: Prisma.SortOrder;
	language?: Prisma.SortOrder;
	name?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
};

export type SkillTranslationCreateNestedManyWithoutSkillInput = {
	create?:
		| Prisma.XOR<
				Prisma.SkillTranslationCreateWithoutSkillInput,
				Prisma.SkillTranslationUncheckedCreateWithoutSkillInput
		  >
		| Prisma.SkillTranslationCreateWithoutSkillInput[]
		| Prisma.SkillTranslationUncheckedCreateWithoutSkillInput[];
	connectOrCreate?:
		| Prisma.SkillTranslationCreateOrConnectWithoutSkillInput
		| Prisma.SkillTranslationCreateOrConnectWithoutSkillInput[];
	createMany?: Prisma.SkillTranslationCreateManySkillInputEnvelope;
	connect?:
		| Prisma.SkillTranslationWhereUniqueInput
		| Prisma.SkillTranslationWhereUniqueInput[];
};

export type SkillTranslationUncheckedCreateNestedManyWithoutSkillInput = {
	create?:
		| Prisma.XOR<
				Prisma.SkillTranslationCreateWithoutSkillInput,
				Prisma.SkillTranslationUncheckedCreateWithoutSkillInput
		  >
		| Prisma.SkillTranslationCreateWithoutSkillInput[]
		| Prisma.SkillTranslationUncheckedCreateWithoutSkillInput[];
	connectOrCreate?:
		| Prisma.SkillTranslationCreateOrConnectWithoutSkillInput
		| Prisma.SkillTranslationCreateOrConnectWithoutSkillInput[];
	createMany?: Prisma.SkillTranslationCreateManySkillInputEnvelope;
	connect?:
		| Prisma.SkillTranslationWhereUniqueInput
		| Prisma.SkillTranslationWhereUniqueInput[];
};

export type SkillTranslationUpdateManyWithoutSkillNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.SkillTranslationCreateWithoutSkillInput,
				Prisma.SkillTranslationUncheckedCreateWithoutSkillInput
		  >
		| Prisma.SkillTranslationCreateWithoutSkillInput[]
		| Prisma.SkillTranslationUncheckedCreateWithoutSkillInput[];
	connectOrCreate?:
		| Prisma.SkillTranslationCreateOrConnectWithoutSkillInput
		| Prisma.SkillTranslationCreateOrConnectWithoutSkillInput[];
	upsert?:
		| Prisma.SkillTranslationUpsertWithWhereUniqueWithoutSkillInput
		| Prisma.SkillTranslationUpsertWithWhereUniqueWithoutSkillInput[];
	createMany?: Prisma.SkillTranslationCreateManySkillInputEnvelope;
	set?:
		| Prisma.SkillTranslationWhereUniqueInput
		| Prisma.SkillTranslationWhereUniqueInput[];
	disconnect?:
		| Prisma.SkillTranslationWhereUniqueInput
		| Prisma.SkillTranslationWhereUniqueInput[];
	delete?:
		| Prisma.SkillTranslationWhereUniqueInput
		| Prisma.SkillTranslationWhereUniqueInput[];
	connect?:
		| Prisma.SkillTranslationWhereUniqueInput
		| Prisma.SkillTranslationWhereUniqueInput[];
	update?:
		| Prisma.SkillTranslationUpdateWithWhereUniqueWithoutSkillInput
		| Prisma.SkillTranslationUpdateWithWhereUniqueWithoutSkillInput[];
	updateMany?:
		| Prisma.SkillTranslationUpdateManyWithWhereWithoutSkillInput
		| Prisma.SkillTranslationUpdateManyWithWhereWithoutSkillInput[];
	deleteMany?:
		| Prisma.SkillTranslationScalarWhereInput
		| Prisma.SkillTranslationScalarWhereInput[];
};

export type SkillTranslationUncheckedUpdateManyWithoutSkillNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.SkillTranslationCreateWithoutSkillInput,
				Prisma.SkillTranslationUncheckedCreateWithoutSkillInput
		  >
		| Prisma.SkillTranslationCreateWithoutSkillInput[]
		| Prisma.SkillTranslationUncheckedCreateWithoutSkillInput[];
	connectOrCreate?:
		| Prisma.SkillTranslationCreateOrConnectWithoutSkillInput
		| Prisma.SkillTranslationCreateOrConnectWithoutSkillInput[];
	upsert?:
		| Prisma.SkillTranslationUpsertWithWhereUniqueWithoutSkillInput
		| Prisma.SkillTranslationUpsertWithWhereUniqueWithoutSkillInput[];
	createMany?: Prisma.SkillTranslationCreateManySkillInputEnvelope;
	set?:
		| Prisma.SkillTranslationWhereUniqueInput
		| Prisma.SkillTranslationWhereUniqueInput[];
	disconnect?:
		| Prisma.SkillTranslationWhereUniqueInput
		| Prisma.SkillTranslationWhereUniqueInput[];
	delete?:
		| Prisma.SkillTranslationWhereUniqueInput
		| Prisma.SkillTranslationWhereUniqueInput[];
	connect?:
		| Prisma.SkillTranslationWhereUniqueInput
		| Prisma.SkillTranslationWhereUniqueInput[];
	update?:
		| Prisma.SkillTranslationUpdateWithWhereUniqueWithoutSkillInput
		| Prisma.SkillTranslationUpdateWithWhereUniqueWithoutSkillInput[];
	updateMany?:
		| Prisma.SkillTranslationUpdateManyWithWhereWithoutSkillInput
		| Prisma.SkillTranslationUpdateManyWithWhereWithoutSkillInput[];
	deleteMany?:
		| Prisma.SkillTranslationScalarWhereInput
		| Prisma.SkillTranslationScalarWhereInput[];
};

export type SkillTranslationCreateWithoutSkillInput = {
	id?: string;
	language: string;
	name: string;
	description?: string | null;
};

export type SkillTranslationUncheckedCreateWithoutSkillInput = {
	id?: string;
	language: string;
	name: string;
	description?: string | null;
};

export type SkillTranslationCreateOrConnectWithoutSkillInput = {
	where: Prisma.SkillTranslationWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.SkillTranslationCreateWithoutSkillInput,
		Prisma.SkillTranslationUncheckedCreateWithoutSkillInput
	>;
};

export type SkillTranslationCreateManySkillInputEnvelope = {
	data:
		| Prisma.SkillTranslationCreateManySkillInput
		| Prisma.SkillTranslationCreateManySkillInput[];
	skipDuplicates?: boolean;
};

export type SkillTranslationUpsertWithWhereUniqueWithoutSkillInput = {
	where: Prisma.SkillTranslationWhereUniqueInput;
	update: Prisma.XOR<
		Prisma.SkillTranslationUpdateWithoutSkillInput,
		Prisma.SkillTranslationUncheckedUpdateWithoutSkillInput
	>;
	create: Prisma.XOR<
		Prisma.SkillTranslationCreateWithoutSkillInput,
		Prisma.SkillTranslationUncheckedCreateWithoutSkillInput
	>;
};

export type SkillTranslationUpdateWithWhereUniqueWithoutSkillInput = {
	where: Prisma.SkillTranslationWhereUniqueInput;
	data: Prisma.XOR<
		Prisma.SkillTranslationUpdateWithoutSkillInput,
		Prisma.SkillTranslationUncheckedUpdateWithoutSkillInput
	>;
};

export type SkillTranslationUpdateManyWithWhereWithoutSkillInput = {
	where: Prisma.SkillTranslationScalarWhereInput;
	data: Prisma.XOR<
		Prisma.SkillTranslationUpdateManyMutationInput,
		Prisma.SkillTranslationUncheckedUpdateManyWithoutSkillInput
	>;
};

export type SkillTranslationScalarWhereInput = {
	AND?:
		| Prisma.SkillTranslationScalarWhereInput
		| Prisma.SkillTranslationScalarWhereInput[];
	OR?: Prisma.SkillTranslationScalarWhereInput[];
	NOT?:
		| Prisma.SkillTranslationScalarWhereInput
		| Prisma.SkillTranslationScalarWhereInput[];
	id?: Prisma.StringFilter<"SkillTranslation"> | string;
	skillId?: Prisma.StringFilter<"SkillTranslation"> | string;
	language?: Prisma.StringFilter<"SkillTranslation"> | string;
	name?: Prisma.StringFilter<"SkillTranslation"> | string;
	description?: Prisma.StringNullableFilter<"SkillTranslation"> | string | null;
};

export type SkillTranslationCreateManySkillInput = {
	id?: string;
	language: string;
	name: string;
	description?: string | null;
};

export type SkillTranslationUpdateWithoutSkillInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	name?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type SkillTranslationUncheckedUpdateWithoutSkillInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	name?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type SkillTranslationUncheckedUpdateManyWithoutSkillInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string;
	language?: Prisma.StringFieldUpdateOperationsInput | string;
	name?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type SkillTranslationSelect<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		skillId?: boolean;
		language?: boolean;
		name?: boolean;
		description?: boolean;
		skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["skillTranslation"]
>;

export type SkillTranslationSelectCreateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		skillId?: boolean;
		language?: boolean;
		name?: boolean;
		description?: boolean;
		skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["skillTranslation"]
>;

export type SkillTranslationSelectUpdateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		skillId?: boolean;
		language?: boolean;
		name?: boolean;
		description?: boolean;
		skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["skillTranslation"]
>;

export type SkillTranslationSelectScalar = {
	id?: boolean;
	skillId?: boolean;
	language?: boolean;
	name?: boolean;
	description?: boolean;
};

export type SkillTranslationOmit<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
	"id" | "skillId" | "language" | "name" | "description",
	ExtArgs["result"]["skillTranslation"]
>;
export type SkillTranslationInclude<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>;
};
export type SkillTranslationIncludeCreateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>;
};
export type SkillTranslationIncludeUpdateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>;
};

export type $SkillTranslationPayload<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	name: "SkillTranslation";
	objects: {
		skill: Prisma.$SkillPayload<ExtArgs>;
	};
	scalars: runtime.Types.Extensions.GetPayloadResult<
		{
			id: string;
			skillId: string;
			language: string;
			name: string;
			description: string | null;
		},
		ExtArgs["result"]["skillTranslation"]
	>;
	composites: {};
};

export type SkillTranslationGetPayload<
	S extends boolean | null | undefined | SkillTranslationDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$SkillTranslationPayload, S>;

export type SkillTranslationCountArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
	SkillTranslationFindManyArgs,
	"select" | "include" | "distinct" | "omit"
> & {
	select?: SkillTranslationCountAggregateInputType | true;
};

export interface SkillTranslationDelegate<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> {
	[K: symbol]: {
		types: Prisma.TypeMap<ExtArgs>["model"]["SkillTranslation"];
		meta: { name: "SkillTranslation" };
	};
	/**
	 * Find zero or one SkillTranslation that matches the filter.
	 * @param {SkillTranslationFindUniqueArgs} args - Arguments to find a SkillTranslation
	 * @example
	 * // Get one SkillTranslation
	 * const skillTranslation = await prisma.skillTranslation.findUnique({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUnique<T extends SkillTranslationFindUniqueArgs>(
		args: Prisma.SelectSubset<T, SkillTranslationFindUniqueArgs<ExtArgs>>,
	): Prisma.Prisma__SkillTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"findUnique",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find one SkillTranslation that matches the filter or throw an error with `error.code='P2025'`
	 * if no matches were found.
	 * @param {SkillTranslationFindUniqueOrThrowArgs} args - Arguments to find a SkillTranslation
	 * @example
	 * // Get one SkillTranslation
	 * const skillTranslation = await prisma.skillTranslation.findUniqueOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUniqueOrThrow<T extends SkillTranslationFindUniqueOrThrowArgs>(
		args: Prisma.SelectSubset<
			T,
			SkillTranslationFindUniqueOrThrowArgs<ExtArgs>
		>,
	): Prisma.Prisma__SkillTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"findUniqueOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first SkillTranslation that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {SkillTranslationFindFirstArgs} args - Arguments to find a SkillTranslation
	 * @example
	 * // Get one SkillTranslation
	 * const skillTranslation = await prisma.skillTranslation.findFirst({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirst<T extends SkillTranslationFindFirstArgs>(
		args?: Prisma.SelectSubset<T, SkillTranslationFindFirstArgs<ExtArgs>>,
	): Prisma.Prisma__SkillTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"findFirst",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first SkillTranslation that matches the filter or
	 * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {SkillTranslationFindFirstOrThrowArgs} args - Arguments to find a SkillTranslation
	 * @example
	 * // Get one SkillTranslation
	 * const skillTranslation = await prisma.skillTranslation.findFirstOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirstOrThrow<T extends SkillTranslationFindFirstOrThrowArgs>(
		args?: Prisma.SelectSubset<
			T,
			SkillTranslationFindFirstOrThrowArgs<ExtArgs>
		>,
	): Prisma.Prisma__SkillTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"findFirstOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find zero or more SkillTranslations that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {SkillTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
	 * @example
	 * // Get all SkillTranslations
	 * const skillTranslations = await prisma.skillTranslation.findMany()
	 *
	 * // Get first 10 SkillTranslations
	 * const skillTranslations = await prisma.skillTranslation.findMany({ take: 10 })
	 *
	 * // Only select the `id`
	 * const skillTranslationWithIdOnly = await prisma.skillTranslation.findMany({ select: { id: true } })
	 *
	 */
	findMany<T extends SkillTranslationFindManyArgs>(
		args?: Prisma.SelectSubset<T, SkillTranslationFindManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"findMany",
			GlobalOmitOptions
		>
	>;

	/**
	 * Create a SkillTranslation.
	 * @param {SkillTranslationCreateArgs} args - Arguments to create a SkillTranslation.
	 * @example
	 * // Create one SkillTranslation
	 * const SkillTranslation = await prisma.skillTranslation.create({
	 *   data: {
	 *     // ... data to create a SkillTranslation
	 *   }
	 * })
	 *
	 */
	create<T extends SkillTranslationCreateArgs>(
		args: Prisma.SelectSubset<T, SkillTranslationCreateArgs<ExtArgs>>,
	): Prisma.Prisma__SkillTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"create",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Create many SkillTranslations.
	 * @param {SkillTranslationCreateManyArgs} args - Arguments to create many SkillTranslations.
	 * @example
	 * // Create many SkillTranslations
	 * const skillTranslation = await prisma.skillTranslation.createMany({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 */
	createMany<T extends SkillTranslationCreateManyArgs>(
		args?: Prisma.SelectSubset<T, SkillTranslationCreateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Create many SkillTranslations and returns the data saved in the database.
	 * @param {SkillTranslationCreateManyAndReturnArgs} args - Arguments to create many SkillTranslations.
	 * @example
	 * // Create many SkillTranslations
	 * const skillTranslation = await prisma.skillTranslation.createManyAndReturn({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 * // Create many SkillTranslations and only return the `id`
	 * const skillTranslationWithIdOnly = await prisma.skillTranslation.createManyAndReturn({
	 *   select: { id: true },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 *
	 */
	createManyAndReturn<T extends SkillTranslationCreateManyAndReturnArgs>(
		args?: Prisma.SelectSubset<
			T,
			SkillTranslationCreateManyAndReturnArgs<ExtArgs>
		>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"createManyAndReturn",
			GlobalOmitOptions
		>
	>;

	/**
	 * Delete a SkillTranslation.
	 * @param {SkillTranslationDeleteArgs} args - Arguments to delete one SkillTranslation.
	 * @example
	 * // Delete one SkillTranslation
	 * const SkillTranslation = await prisma.skillTranslation.delete({
	 *   where: {
	 *     // ... filter to delete one SkillTranslation
	 *   }
	 * })
	 *
	 */
	delete<T extends SkillTranslationDeleteArgs>(
		args: Prisma.SelectSubset<T, SkillTranslationDeleteArgs<ExtArgs>>,
	): Prisma.Prisma__SkillTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"delete",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Update one SkillTranslation.
	 * @param {SkillTranslationUpdateArgs} args - Arguments to update one SkillTranslation.
	 * @example
	 * // Update one SkillTranslation
	 * const skillTranslation = await prisma.skillTranslation.update({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	update<T extends SkillTranslationUpdateArgs>(
		args: Prisma.SelectSubset<T, SkillTranslationUpdateArgs<ExtArgs>>,
	): Prisma.Prisma__SkillTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"update",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Delete zero or more SkillTranslations.
	 * @param {SkillTranslationDeleteManyArgs} args - Arguments to filter SkillTranslations to delete.
	 * @example
	 * // Delete a few SkillTranslations
	 * const { count } = await prisma.skillTranslation.deleteMany({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 *
	 */
	deleteMany<T extends SkillTranslationDeleteManyArgs>(
		args?: Prisma.SelectSubset<T, SkillTranslationDeleteManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Update zero or more SkillTranslations.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {SkillTranslationUpdateManyArgs} args - Arguments to update one or more rows.
	 * @example
	 * // Update many SkillTranslations
	 * const skillTranslation = await prisma.skillTranslation.updateMany({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	updateMany<T extends SkillTranslationUpdateManyArgs>(
		args: Prisma.SelectSubset<T, SkillTranslationUpdateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Update zero or more SkillTranslations and returns the data updated in the database.
	 * @param {SkillTranslationUpdateManyAndReturnArgs} args - Arguments to update many SkillTranslations.
	 * @example
	 * // Update many SkillTranslations
	 * const skillTranslation = await prisma.skillTranslation.updateManyAndReturn({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 * // Update zero or more SkillTranslations and only return the `id`
	 * const skillTranslationWithIdOnly = await prisma.skillTranslation.updateManyAndReturn({
	 *   select: { id: true },
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 *
	 */
	updateManyAndReturn<T extends SkillTranslationUpdateManyAndReturnArgs>(
		args: Prisma.SelectSubset<
			T,
			SkillTranslationUpdateManyAndReturnArgs<ExtArgs>
		>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"updateManyAndReturn",
			GlobalOmitOptions
		>
	>;

	/**
	 * Create or update one SkillTranslation.
	 * @param {SkillTranslationUpsertArgs} args - Arguments to update or create a SkillTranslation.
	 * @example
	 * // Update or create a SkillTranslation
	 * const skillTranslation = await prisma.skillTranslation.upsert({
	 *   create: {
	 *     // ... data to create a SkillTranslation
	 *   },
	 *   update: {
	 *     // ... in case it already exists, update
	 *   },
	 *   where: {
	 *     // ... the filter for the SkillTranslation we want to update
	 *   }
	 * })
	 */
	upsert<T extends SkillTranslationUpsertArgs>(
		args: Prisma.SelectSubset<T, SkillTranslationUpsertArgs<ExtArgs>>,
	): Prisma.Prisma__SkillTranslationClient<
		runtime.Types.Result.GetResult<
			Prisma.$SkillTranslationPayload<ExtArgs>,
			T,
			"upsert",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Count the number of SkillTranslations.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {SkillTranslationCountArgs} args - Arguments to filter SkillTranslations to count.
	 * @example
	 * // Count the number of SkillTranslations
	 * const count = await prisma.skillTranslation.count({
	 *   where: {
	 *     // ... the filter for the SkillTranslations we want to count
	 *   }
	 * })
	 **/
	count<T extends SkillTranslationCountArgs>(
		args?: Prisma.Subset<T, SkillTranslationCountArgs>,
	): Prisma.PrismaPromise<
		T extends runtime.Types.Utils.Record<"select", any>
			? T["select"] extends true
				? number
				: Prisma.GetScalarType<
						T["select"],
						SkillTranslationCountAggregateOutputType
					>
			: number
	>;

	/**
	 * Allows you to perform aggregations operations on a SkillTranslation.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {SkillTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
	 * @example
	 * // Ordered by age ascending
	 * // Where email contains prisma.io
	 * // Limited to the 10 users
	 * const aggregations = await prisma.user.aggregate({
	 *   _avg: {
	 *     age: true,
	 *   },
	 *   where: {
	 *     email: {
	 *       contains: "prisma.io",
	 *     },
	 *   },
	 *   orderBy: {
	 *     age: "asc",
	 *   },
	 *   take: 10,
	 * })
	 **/
	aggregate<T extends SkillTranslationAggregateArgs>(
		args: Prisma.Subset<T, SkillTranslationAggregateArgs>,
	): Prisma.PrismaPromise<GetSkillTranslationAggregateType<T>>;

	/**
	 * Group by SkillTranslation.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {SkillTranslationGroupByArgs} args - Group by arguments.
	 * @example
	 * // Group by city, order by createdAt, get count
	 * const result = await prisma.user.groupBy({
	 *   by: ['city', 'createdAt'],
	 *   orderBy: {
	 *     createdAt: true
	 *   },
	 *   _count: {
	 *     _all: true
	 *   },
	 * })
	 *
	 **/
	groupBy<
		T extends SkillTranslationGroupByArgs,
		HasSelectOrTake extends Prisma.Or<
			Prisma.Extends<"skip", Prisma.Keys<T>>,
			Prisma.Extends<"take", Prisma.Keys<T>>
		>,
		OrderByArg extends Prisma.True extends HasSelectOrTake
			? { orderBy: SkillTranslationGroupByArgs["orderBy"] }
			: { orderBy?: SkillTranslationGroupByArgs["orderBy"] },
		OrderFields extends Prisma.ExcludeUnderscoreKeys<
			Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
		>,
		ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
		ByValid extends Prisma.Has<ByFields, OrderFields>,
		HavingFields extends Prisma.GetHavingFields<T["having"]>,
		HavingValid extends Prisma.Has<ByFields, HavingFields>,
		ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
		InputErrors extends ByEmpty extends Prisma.True
			? `Error: "by" must not be empty.`
			: HavingValid extends Prisma.False
				? {
						[P in HavingFields]: P extends ByFields
							? never
							: P extends string
								? `Error: Field "${P}" used in "having" needs to be provided in "by".`
								: [
										Error,
										"Field ",
										P,
										` in "having" needs to be provided in "by"`,
									];
					}[HavingFields]
				: "take" extends Prisma.Keys<T>
					? "orderBy" extends Prisma.Keys<T>
						? ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields]
						: 'Error: If you provide "take", you also need to provide "orderBy"'
					: "skip" extends Prisma.Keys<T>
						? "orderBy" extends Prisma.Keys<T>
							? ByValid extends Prisma.True
								? {}
								: {
										[P in OrderFields]: P extends ByFields
											? never
											: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
									}[OrderFields]
							: 'Error: If you provide "skip", you also need to provide "orderBy"'
						: ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields],
	>(
		args: Prisma.SubsetIntersection<
			T,
			SkillTranslationGroupByArgs,
			OrderByArg
		> &
			InputErrors,
	): {} extends InputErrors
		? GetSkillTranslationGroupByPayload<T>
		: Prisma.PrismaPromise<InputErrors>;
	/**
	 * Fields of the SkillTranslation model
	 */
	readonly fields: SkillTranslationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for SkillTranslation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__SkillTranslationClient<
	T,
	Null = never,
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
	readonly [Symbol.toStringTag]: "PrismaPromise";
	skill<T extends Prisma.SkillDefaultArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.SkillDefaultArgs<ExtArgs>>,
	): Prisma.Prisma__SkillClient<
		| runtime.Types.Result.GetResult<
				Prisma.$SkillPayload<ExtArgs>,
				T,
				"findUniqueOrThrow",
				GlobalOmitOptions
		  >
		| Null,
		Null,
		ExtArgs,
		GlobalOmitOptions
	>;
	/**
	 * Attaches callbacks for the resolution and/or rejection of the Promise.
	 * @param onfulfilled The callback to execute when the Promise is resolved.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of which ever callback is executed.
	 */
	then<TResult1 = T, TResult2 = never>(
		onfulfilled?:
			| ((value: T) => TResult1 | PromiseLike<TResult1>)
			| undefined
			| null,
		onrejected?:
			| ((reason: any) => TResult2 | PromiseLike<TResult2>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
	/**
	 * Attaches a callback for only the rejection of the Promise.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of the callback.
	 */
	catch<TResult = never>(
		onrejected?:
			| ((reason: any) => TResult | PromiseLike<TResult>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<T | TResult>;
	/**
	 * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
	 * resolved value cannot be modified from the callback.
	 * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
	 * @returns A Promise for the completion of the callback.
	 */
	finally(
		onfinally?: (() => void) | undefined | null,
	): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the SkillTranslation model
 */
export interface SkillTranslationFieldRefs {
	readonly id: Prisma.FieldRef<"SkillTranslation", "String">;
	readonly skillId: Prisma.FieldRef<"SkillTranslation", "String">;
	readonly language: Prisma.FieldRef<"SkillTranslation", "String">;
	readonly name: Prisma.FieldRef<"SkillTranslation", "String">;
	readonly description: Prisma.FieldRef<"SkillTranslation", "String">;
}

// Custom InputTypes
/**
 * SkillTranslation findUnique
 */
export type SkillTranslationFindUniqueArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which SkillTranslation to fetch.
	 */
	where: Prisma.SkillTranslationWhereUniqueInput;
};

/**
 * SkillTranslation findUniqueOrThrow
 */
export type SkillTranslationFindUniqueOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which SkillTranslation to fetch.
	 */
	where: Prisma.SkillTranslationWhereUniqueInput;
};

/**
 * SkillTranslation findFirst
 */
export type SkillTranslationFindFirstArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which SkillTranslation to fetch.
	 */
	where?: Prisma.SkillTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of SkillTranslations to fetch.
	 */
	orderBy?:
		| Prisma.SkillTranslationOrderByWithRelationInput
		| Prisma.SkillTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for SkillTranslations.
	 */
	cursor?: Prisma.SkillTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` SkillTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` SkillTranslations.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of SkillTranslations.
	 */
	distinct?:
		| Prisma.SkillTranslationScalarFieldEnum
		| Prisma.SkillTranslationScalarFieldEnum[];
};

/**
 * SkillTranslation findFirstOrThrow
 */
export type SkillTranslationFindFirstOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which SkillTranslation to fetch.
	 */
	where?: Prisma.SkillTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of SkillTranslations to fetch.
	 */
	orderBy?:
		| Prisma.SkillTranslationOrderByWithRelationInput
		| Prisma.SkillTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for SkillTranslations.
	 */
	cursor?: Prisma.SkillTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` SkillTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` SkillTranslations.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of SkillTranslations.
	 */
	distinct?:
		| Prisma.SkillTranslationScalarFieldEnum
		| Prisma.SkillTranslationScalarFieldEnum[];
};

/**
 * SkillTranslation findMany
 */
export type SkillTranslationFindManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationInclude<ExtArgs> | null;
	/**
	 * Filter, which SkillTranslations to fetch.
	 */
	where?: Prisma.SkillTranslationWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of SkillTranslations to fetch.
	 */
	orderBy?:
		| Prisma.SkillTranslationOrderByWithRelationInput
		| Prisma.SkillTranslationOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for listing SkillTranslations.
	 */
	cursor?: Prisma.SkillTranslationWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` SkillTranslations from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` SkillTranslations.
	 */
	skip?: number;
	distinct?:
		| Prisma.SkillTranslationScalarFieldEnum
		| Prisma.SkillTranslationScalarFieldEnum[];
};

/**
 * SkillTranslation create
 */
export type SkillTranslationCreateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationInclude<ExtArgs> | null;
	/**
	 * The data needed to create a SkillTranslation.
	 */
	data: Prisma.XOR<
		Prisma.SkillTranslationCreateInput,
		Prisma.SkillTranslationUncheckedCreateInput
	>;
};

/**
 * SkillTranslation createMany
 */
export type SkillTranslationCreateManyArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to create many SkillTranslations.
	 */
	data:
		| Prisma.SkillTranslationCreateManyInput
		| Prisma.SkillTranslationCreateManyInput[];
	skipDuplicates?: boolean;
};

/**
 * SkillTranslation createManyAndReturn
 */
export type SkillTranslationCreateManyAndReturnArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelectCreateManyAndReturn<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * The data used to create many SkillTranslations.
	 */
	data:
		| Prisma.SkillTranslationCreateManyInput
		| Prisma.SkillTranslationCreateManyInput[];
	skipDuplicates?: boolean;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * SkillTranslation update
 */
export type SkillTranslationUpdateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationInclude<ExtArgs> | null;
	/**
	 * The data needed to update a SkillTranslation.
	 */
	data: Prisma.XOR<
		Prisma.SkillTranslationUpdateInput,
		Prisma.SkillTranslationUncheckedUpdateInput
	>;
	/**
	 * Choose, which SkillTranslation to update.
	 */
	where: Prisma.SkillTranslationWhereUniqueInput;
};

/**
 * SkillTranslation updateMany
 */
export type SkillTranslationUpdateManyArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to update SkillTranslations.
	 */
	data: Prisma.XOR<
		Prisma.SkillTranslationUpdateManyMutationInput,
		Prisma.SkillTranslationUncheckedUpdateManyInput
	>;
	/**
	 * Filter which SkillTranslations to update
	 */
	where?: Prisma.SkillTranslationWhereInput;
	/**
	 * Limit how many SkillTranslations to update.
	 */
	limit?: number;
};

/**
 * SkillTranslation updateManyAndReturn
 */
export type SkillTranslationUpdateManyAndReturnArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelectUpdateManyAndReturn<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * The data used to update SkillTranslations.
	 */
	data: Prisma.XOR<
		Prisma.SkillTranslationUpdateManyMutationInput,
		Prisma.SkillTranslationUncheckedUpdateManyInput
	>;
	/**
	 * Filter which SkillTranslations to update
	 */
	where?: Prisma.SkillTranslationWhereInput;
	/**
	 * Limit how many SkillTranslations to update.
	 */
	limit?: number;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * SkillTranslation upsert
 */
export type SkillTranslationUpsertArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationInclude<ExtArgs> | null;
	/**
	 * The filter to search for the SkillTranslation to update in case it exists.
	 */
	where: Prisma.SkillTranslationWhereUniqueInput;
	/**
	 * In case the SkillTranslation found by the `where` argument doesn't exist, create a new SkillTranslation with this data.
	 */
	create: Prisma.XOR<
		Prisma.SkillTranslationCreateInput,
		Prisma.SkillTranslationUncheckedCreateInput
	>;
	/**
	 * In case the SkillTranslation was found with the provided `where` argument, update it with this data.
	 */
	update: Prisma.XOR<
		Prisma.SkillTranslationUpdateInput,
		Prisma.SkillTranslationUncheckedUpdateInput
	>;
};

/**
 * SkillTranslation delete
 */
export type SkillTranslationDeleteArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationInclude<ExtArgs> | null;
	/**
	 * Filter which SkillTranslation to delete.
	 */
	where: Prisma.SkillTranslationWhereUniqueInput;
};

/**
 * SkillTranslation deleteMany
 */
export type SkillTranslationDeleteManyArgs<
	_ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which SkillTranslations to delete
	 */
	where?: Prisma.SkillTranslationWhereInput;
	/**
	 * Limit how many SkillTranslations to delete.
	 */
	limit?: number;
};

/**
 * SkillTranslation without action
 */
export type SkillTranslationDefaultArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillTranslation
	 */
	select?: Prisma.SkillTranslationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillTranslation
	 */
	omit?: Prisma.SkillTranslationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillTranslationInclude<ExtArgs> | null;
};
